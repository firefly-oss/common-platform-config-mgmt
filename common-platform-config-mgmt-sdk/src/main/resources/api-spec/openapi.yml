openapi: 3.0.1
info:
  title: common-platform-config-mgmt
  description: Common Platform Config Management Core Application
  contact:
    name: Firefly Software Solutions Inc
    email: dev@getfirefly.io
  version: 1.0.0
servers:
  - url: http://core.getfirefly.io/config
    description: Development Environment
  - url: /
    description: Local Development Environment
tags:
  - name: Channel Config Parameters
    description: Dynamic configuration parameters for channels
  - name: Provider Parameters
    description: API for managing provider parameters and configuration
  - name: Tenant Management
    description: Manage logical tenant separations in Firefly core banking. Tenants enable multi-tenancy where different banking organizations share infrastructure while maintaining separate configurations, providers, branding, and operational settings. Use these APIs to create, configure, and manage tenant instances, their provider relationships, and access tenant-specific resources like settings and branding.
  - name: Channel Configuration
    description: APIs for managing channel configurations (Web Banking, Mobile, ATM, etc.)
  - name: Provider Statuses
    description: API for managing provider statuses
  - name: Tenant Statuses
    description: API for managing tenant statuses
  - name: Webhook Configuration
    description: Configure event-driven HTTP callbacks for real-time notifications. Webhooks enable Firefly to push events (payments, account changes, KYC updates, fraud alerts) to external systems in real-time. Configure target URLs, authentication (HMAC, OAuth2, API keys), event filtering, retry policies with exponential backoff, batching, circuit breakers, and SSL verification. Monitor webhook health, delivery success rates, response times, and troubleshoot failures with detailed metrics.
  - name: Provider Types
    description: API for managing provider types
  - name: Tenant Settings
    description: API for managing tenant operational settings including rate limiting, security policies, circuit breakers, and compliance
  - name: Provider Management
    description: Manage external service provider integrations for Firefly core banking. Providers are third-party services that Firefly integrates with to deliver banking capabilities such as payment processing, KYC/AML verification, card issuing, fraud detection, and more. Use these APIs to register providers, configure API endpoints, manage credentials, track SLAs, monitor health status, and maintain provider contracts and certifications.
  - name: Feature Flags
    description: API for managing feature flags and feature toggles
  - name: Provider-Tenant Relationships
    description: Manage provider integration configurations for specific tenants. Provider-Tenant relationships define how a tenant uses an external service provider, including tenant-specific configuration overrides, billing models (transaction-based, volume-based, flat-fee), priority for load balancing, failover settings, circuit breaker thresholds, transaction limits, and usage tracking. Use these APIs to associate providers with tenants, configure relationship settings, monitor usage metrics, and manage provider failover strategies.
  - name: Provider Value Mappings
    description: API for managing value mappings between Firefly and providers
  - name: Environment Configurations
    description: API for managing environment-specific configurations (dev, staging, production)
  - name: Tenant Brandings
    description: API for managing tenant branding and visual configuration
  - name: Configuration Audits
    description: API for managing configuration audit trail with rollback capabilities
paths:
  /api/v1/webhook-configs/{id}:
    get:
      tags:
        - Webhook Configuration
      summary: Retrieve webhook configuration by ID
      description: Fetches complete webhook configuration including target URL, event filters, authentication settings, retry policies, batching configuration, circuit breaker settings, and delivery metrics (success rate, average response time, failure count). Sensitive fields like secret keys are masked in the response.
      operationId: getWebhookConfigById
      parameters:
        - name: id
          in: path
          description: Unique identifier (UUID) of the webhook configuration to retrieve
          required: true
          schema:
            type: string
            format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
      responses:
        '200':
          description: Webhook configuration successfully retrieved
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhookConfigDTO'
        '403':
          description: Access denied - Insufficient permissions to view this webhook configuration
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhookConfigDTO'
        '404':
          description: Webhook configuration not found - The specified webhook ID does not exist
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhookConfigDTO'
    put:
      tags:
        - Webhook Configuration
      summary: Update existing webhook configuration
      description: Updates webhook configuration including URL, event filters, authentication settings, retry policies, and circuit breaker thresholds. Uses optimistic locking to prevent concurrent modifications. Changing authentication settings or URL may require re-verification. Delivery metrics are preserved but can be reset if needed. Disabling a webhook stops event delivery but preserves configuration.
      operationId: updateWebhookConfig
      parameters:
        - name: id
          in: path
          description: ID of the webhook configuration to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookConfigDTO'
        required: true
      responses:
        '200':
          description: Webhook configuration successfully updated - Returns updated webhook with new version number
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhookConfigDTO'
        '400':
          description: Invalid input - Validation errors or business rule violations
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhookConfigDTO'
        '404':
          description: Webhook configuration not found - The specified webhook ID does not exist
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhookConfigDTO'
        '409':
          description: Conflict - Version mismatch due to concurrent modification
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhookConfigDTO'
    delete:
      tags:
        - Webhook Configuration
      summary: Delete a webhook configuration
      operationId: deleteWebhookConfig
      parameters:
        - name: id
          in: path
          description: ID of the webhook configuration to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Webhook configuration deleted
        '404':
          description: Webhook configuration not found
  /api/v1/tenants/{tenantId}/providers/{id}:
    get:
      tags:
        - Tenant Management
      summary: Get tenant-provider relationship details
      description: Retrieves detailed configuration of a specific provider-tenant relationship including configuration overrides, billing settings, usage metrics, health status, and failover configuration.
      operationId: getTenantProviderById
      parameters:
        - name: tenantId
          in: path
          description: ID of the tenant
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          description: ID of the provider-tenant relationship to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
        '404':
          description: Provider-tenant relationship not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
    put:
      tags:
        - Tenant Management
      summary: Update a provider-tenant relationship
      description: Updates a provider-tenant relationship for a specific tenant and returns it
      operationId: updateTenantProvider
      parameters:
        - name: tenantId
          in: path
          description: ID of the tenant
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          description: ID of the provider-tenant relationship to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderTenantDTO'
        required: true
      responses:
        '200':
          description: Provider-tenant relationship updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
        '404':
          description: Provider-tenant relationship not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
    delete:
      tags:
        - Tenant Management
      summary: Remove a provider from a tenant
      description: Deletes a provider-tenant relationship for a specific tenant
      operationId: removeTenantProvider
      parameters:
        - name: tenantId
          in: path
          description: ID of the tenant
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          description: ID of the provider-tenant relationship to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Provider removed from tenant
        '404':
          description: Provider-tenant relationship not found
  /api/v1/tenants/{id}:
    get:
      tags:
        - Tenant Management
      summary: Retrieve tenant by ID
      description: Fetches complete tenant information including legal entity details, hierarchical structure, risk ratings, compliance tier, subscription details, and contact information. Returns 404 if tenant does not exist or is not accessible.
      operationId: getTenantById
      parameters:
        - name: id
          in: path
          description: Unique identifier (UUID) of the tenant to retrieve
          required: true
          schema:
            type: string
            format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
      responses:
        '200':
          description: Tenant successfully retrieved
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantDTO'
        '403':
          description: Access denied - Insufficient permissions to view this tenant
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantDTO'
        '404':
          description: Tenant not found - The specified tenant ID does not exist or has been deleted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantDTO'
    put:
      tags:
        - Tenant Management
      summary: Update existing tenant
      description: Updates tenant information including legal entity details, contact information, risk ratings, compliance settings, subscription details, and metadata. Uses optimistic locking via version field to prevent concurrent modification conflicts. All fields except ID and audit timestamps can be updated. Changing tenant status or type may trigger validation rules and workflow approvals.
      operationId: updateTenant
      parameters:
        - name: id
          in: path
          description: Unique identifier (UUID) of the tenant to update
          required: true
          schema:
            type: string
            format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantDTO'
        required: true
      responses:
        '200':
          description: Tenant successfully updated - Returns updated tenant with new version number
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantDTO'
        '400':
          description: Invalid input - Validation errors or business rule violations
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantDTO'
        '404':
          description: Tenant not found - The specified tenant ID does not exist
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantDTO'
        '409':
          description: Conflict - Version mismatch due to concurrent modification
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantDTO'
    delete:
      tags:
        - Tenant Management
      summary: Delete tenant
      description: Permanently deletes a tenant and all associated resources including settings, branding, provider relationships, and audit history. This is a destructive operation that cannot be undone. Consider deactivating the tenant instead by updating its status to INACTIVE. Deletion may fail if tenant has active transactions or dependencies.
      operationId: deleteTenant
      parameters:
        - name: id
          in: path
          description: Unique identifier (UUID) of the tenant to delete
          required: true
          schema:
            type: string
            format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
      responses:
        '204':
          description: Tenant successfully deleted - No content returned
        '403':
          description: Forbidden - Insufficient permissions to delete tenant
        '404':
          description: Tenant not found - The specified tenant ID does not exist
        '409':
          description: Conflict - Cannot delete tenant with active dependencies or transactions
  /api/v1/tenant-statuses/{id}:
    get:
      tags:
        - Tenant Statuses
      summary: Get a tenant status by ID
      description: Returns a tenant status based on the ID
      operationId: getTenantStatusById
      parameters:
        - name: id
          in: path
          description: ID of the tenant status to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantStatusDTO'
        '404':
          description: Tenant status not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantStatusDTO'
    put:
      tags:
        - Tenant Statuses
      summary: Update an existing tenant status
      description: Updates an existing tenant status and returns it
      operationId: updateTenantStatus
      parameters:
        - name: id
          in: path
          description: ID of the tenant status to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantStatusDTO'
        required: true
      responses:
        '200':
          description: Tenant status updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantStatusDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantStatusDTO'
        '404':
          description: Tenant status not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantStatusDTO'
    delete:
      tags:
        - Tenant Statuses
      summary: Delete a tenant status
      description: Deletes a tenant status
      operationId: deleteTenantStatus
      parameters:
        - name: id
          in: path
          description: ID of the tenant status to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Tenant status deleted
        '404':
          description: Tenant status not found
  /api/v1/tenant-settings/{id}:
    get:
      tags:
        - Tenant Settings
      summary: Get tenant settings by ID
      operationId: getTenantSettingsById
      parameters:
        - name: id
          in: path
          description: ID of the tenant settings to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantSettingsDTO'
        '404':
          description: Tenant settings not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantSettingsDTO'
    put:
      tags:
        - Tenant Settings
      summary: Update existing tenant settings
      operationId: updateTenantSettings
      parameters:
        - name: id
          in: path
          description: ID of the tenant settings to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantSettingsDTO'
        required: true
      responses:
        '200':
          description: Tenant settings updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantSettingsDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantSettingsDTO'
        '404':
          description: Tenant settings not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantSettingsDTO'
    delete:
      tags:
        - Tenant Settings
      summary: Delete tenant settings
      operationId: deleteTenantSettings
      parameters:
        - name: id
          in: path
          description: ID of the tenant settings to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Tenant settings deleted
        '404':
          description: Tenant settings not found
  /api/v1/tenant-brandings/{id}:
    get:
      tags:
        - Tenant Brandings
      summary: Get a tenant branding by ID
      operationId: getTenantBrandingById
      parameters:
        - name: id
          in: path
          description: ID of the tenant branding to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantBrandingDTO'
        '404':
          description: Tenant branding not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantBrandingDTO'
    put:
      tags:
        - Tenant Brandings
      summary: Update an existing tenant branding
      operationId: updateTenantBranding
      parameters:
        - name: id
          in: path
          description: ID of the tenant branding to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantBrandingDTO'
        required: true
      responses:
        '200':
          description: Tenant branding updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantBrandingDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantBrandingDTO'
        '404':
          description: Tenant branding not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantBrandingDTO'
    delete:
      tags:
        - Tenant Brandings
      summary: Delete a tenant branding
      operationId: deleteTenantBranding
      parameters:
        - name: id
          in: path
          description: ID of the tenant branding to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Tenant branding deleted
        '404':
          description: Tenant branding not found
  /api/v1/providers/{id}:
    get:
      tags:
        - Provider Management
      summary: Retrieve provider by ID
      description: Fetches complete provider information including API configuration (production/sandbox URLs), supported capabilities, SLA commitments, compliance certifications, contract details, contact information, and current health status. Returns 404 if provider does not exist.
      operationId: getProviderById
      parameters:
        - name: id
          in: path
          description: Unique identifier (UUID) of the provider to retrieve
          required: true
          schema:
            type: string
            format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
      responses:
        '200':
          description: Provider successfully retrieved
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderDTO'
        '403':
          description: Access denied - Insufficient permissions to view this provider
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderDTO'
        '404':
          description: Provider not found - The specified provider ID does not exist or has been deleted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderDTO'
    put:
      tags:
        - Provider Management
      summary: Update existing provider
      description: Updates provider configuration including API endpoints, capabilities, SLA commitments, certifications, contract details, contact information, and health monitoring settings. Uses optimistic locking via version field to prevent concurrent modification conflicts. Changing provider status may affect all tenant relationships using this provider. Health status and metrics are typically updated automatically by monitoring systems.
      operationId: updateProvider
      parameters:
        - name: id
          in: path
          description: Unique identifier (UUID) of the provider to update
          required: true
          schema:
            type: string
            format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderDTO'
        required: true
      responses:
        '200':
          description: Provider successfully updated - Returns updated provider with new version number
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderDTO'
        '400':
          description: Invalid input - Validation errors or business rule violations
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderDTO'
        '404':
          description: Provider not found - The specified provider ID does not exist
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderDTO'
        '409':
          description: Conflict - Version mismatch due to concurrent modification
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderDTO'
    delete:
      tags:
        - Provider Management
      summary: Delete a provider
      description: Deletes a provider
      operationId: deleteProvider
      parameters:
        - name: id
          in: path
          description: ID of the provider to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Provider deleted
        '404':
          description: Provider not found
  /api/v1/provider-value-mappings/{id}:
    get:
      tags:
        - Provider Value Mappings
      summary: Get a provider value mapping by ID
      operationId: getProviderValueMappingById
      parameters:
        - name: id
          in: path
          description: ID of the provider value mapping to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderValueMappingDTO'
        '404':
          description: Provider value mapping not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderValueMappingDTO'
    put:
      tags:
        - Provider Value Mappings
      summary: Update an existing provider value mapping
      operationId: updateProviderValueMapping
      parameters:
        - name: id
          in: path
          description: ID of the provider value mapping to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderValueMappingDTO'
        required: true
      responses:
        '200':
          description: Provider value mapping updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderValueMappingDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderValueMappingDTO'
        '404':
          description: Provider value mapping not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderValueMappingDTO'
    delete:
      tags:
        - Provider Value Mappings
      summary: Delete a provider value mapping
      operationId: deleteProviderValueMapping
      parameters:
        - name: id
          in: path
          description: ID of the provider value mapping to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Provider value mapping deleted
        '404':
          description: Provider value mapping not found
  /api/v1/provider-types/{id}:
    get:
      tags:
        - Provider Types
      summary: Get a provider type by ID
      description: Returns a provider type based on the ID
      operationId: getProviderTypeById
      parameters:
        - name: id
          in: path
          description: ID of the provider type to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTypeDTO'
        '404':
          description: Provider type not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTypeDTO'
    put:
      tags:
        - Provider Types
      summary: Update an existing provider type
      description: Updates an existing provider type and returns it
      operationId: updateProviderType
      parameters:
        - name: id
          in: path
          description: ID of the provider type to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderTypeDTO'
        required: true
      responses:
        '200':
          description: Provider type updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTypeDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTypeDTO'
        '404':
          description: Provider type not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTypeDTO'
    delete:
      tags:
        - Provider Types
      summary: Delete a provider type
      description: Deletes a provider type
      operationId: deleteProviderType
      parameters:
        - name: id
          in: path
          description: ID of the provider type to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Provider type deleted
        '404':
          description: Provider type not found
  /api/v1/provider-tenants/{id}:
    get:
      tags:
        - Provider-Tenant Relationships
      summary: Retrieve provider-tenant relationship by ID
      description: Fetches complete provider-tenant relationship configuration including priority, billing settings (cost per transaction, monthly fees, transaction limits), configuration overrides, failover settings, circuit breaker configuration, approval details, and usage metrics (total requests, failures, average response time).
      operationId: getProviderTenantById
      parameters:
        - name: id
          in: path
          description: Unique identifier (UUID) of the provider-tenant relationship to retrieve
          required: true
          schema:
            type: string
            format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
      responses:
        '200':
          description: Provider-tenant relationship successfully retrieved
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
        '403':
          description: Access denied - Insufficient permissions to view this relationship
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
        '404':
          description: Provider-tenant relationship not found - The specified relationship ID does not exist
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
    put:
      tags:
        - Provider-Tenant Relationships
      summary: Update an existing provider-tenant relationship
      description: Updates an existing provider-tenant relationship and returns it
      operationId: updateProviderTenant
      parameters:
        - name: id
          in: path
          description: ID of the provider-tenant relationship to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderTenantDTO'
        required: true
      responses:
        '200':
          description: Provider-tenant relationship updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
        '404':
          description: Provider-tenant relationship not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
    delete:
      tags:
        - Provider-Tenant Relationships
      summary: Delete a provider-tenant relationship
      description: Deletes a provider-tenant relationship
      operationId: deleteProviderTenant
      parameters:
        - name: id
          in: path
          description: ID of the provider-tenant relationship to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Provider-tenant relationship deleted
        '404':
          description: Provider-tenant relationship not found
  /api/v1/provider-statuses/{id}:
    get:
      tags:
        - Provider Statuses
      summary: Get a provider status by ID
      description: Returns a provider status based on the ID
      operationId: getProviderStatusById
      parameters:
        - name: id
          in: path
          description: ID of the provider status to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderStatusDTO'
        '404':
          description: Provider status not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderStatusDTO'
    put:
      tags:
        - Provider Statuses
      summary: Update an existing provider status
      description: Updates an existing provider status and returns it
      operationId: updateProviderStatus
      parameters:
        - name: id
          in: path
          description: ID of the provider status to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderStatusDTO'
        required: true
      responses:
        '200':
          description: Provider status updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderStatusDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderStatusDTO'
        '404':
          description: Provider status not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderStatusDTO'
    delete:
      tags:
        - Provider Statuses
      summary: Delete a provider status
      description: Deletes a provider status
      operationId: deleteProviderStatus
      parameters:
        - name: id
          in: path
          description: ID of the provider status to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Provider status deleted
        '404':
          description: Provider status not found
  /api/v1/provider-parameters/{id}:
    get:
      tags:
        - Provider Parameters
      summary: Get a provider parameter by ID
      operationId: getProviderParameterById
      parameters:
        - name: id
          in: path
          description: ID of the provider parameter to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderParameterDTO'
        '404':
          description: Provider parameter not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderParameterDTO'
    put:
      tags:
        - Provider Parameters
      summary: Update an existing provider parameter
      operationId: updateProviderParameter
      parameters:
        - name: id
          in: path
          description: ID of the provider parameter to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderParameterDTO'
        required: true
      responses:
        '200':
          description: Provider parameter updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderParameterDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderParameterDTO'
        '404':
          description: Provider parameter not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderParameterDTO'
    delete:
      tags:
        - Provider Parameters
      summary: Delete a provider parameter
      operationId: deleteProviderParameter
      parameters:
        - name: id
          in: path
          description: ID of the provider parameter to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Provider parameter deleted
        '404':
          description: Provider parameter not found
  /api/v1/feature-flags/{id}:
    get:
      tags:
        - Feature Flags
      summary: Get a feature flag by ID
      operationId: getFeatureFlagById
      parameters:
        - name: id
          in: path
          description: ID of the feature flag to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FeatureFlagDTO'
        '404':
          description: Feature flag not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FeatureFlagDTO'
    put:
      tags:
        - Feature Flags
      summary: Update an existing feature flag
      operationId: updateFeatureFlag
      parameters:
        - name: id
          in: path
          description: ID of the feature flag to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlagDTO'
        required: true
      responses:
        '200':
          description: Feature flag updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FeatureFlagDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FeatureFlagDTO'
        '404':
          description: Feature flag not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FeatureFlagDTO'
    delete:
      tags:
        - Feature Flags
      summary: Delete a feature flag
      operationId: deleteFeatureFlag
      parameters:
        - name: id
          in: path
          description: ID of the feature flag to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Feature flag deleted
        '404':
          description: Feature flag not found
  /api/v1/environment-configs/{id}:
    get:
      tags:
        - Environment Configurations
      summary: Get environment configuration by ID
      operationId: getEnvironmentConfigById
      parameters:
        - name: id
          in: path
          description: ID of the environment configuration to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvironmentConfigDTO'
        '404':
          description: Environment configuration not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvironmentConfigDTO'
    put:
      tags:
        - Environment Configurations
      summary: Update an existing environment configuration
      operationId: updateEnvironmentConfig
      parameters:
        - name: id
          in: path
          description: ID of the environment configuration to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentConfigDTO'
        required: true
      responses:
        '200':
          description: Environment configuration updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvironmentConfigDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvironmentConfigDTO'
        '404':
          description: Environment configuration not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvironmentConfigDTO'
    delete:
      tags:
        - Environment Configurations
      summary: Delete an environment configuration
      operationId: deleteEnvironmentConfig
      parameters:
        - name: id
          in: path
          description: ID of the environment configuration to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Environment configuration deleted
        '404':
          description: Environment configuration not found
  /api/v1/channel-configs/{id}:
    get:
      tags:
        - Channel Configuration
      summary: Get channel config by ID
      description: Retrieve a specific channel configuration by its ID
      operationId: getChannelConfigById
      parameters:
        - name: id
          in: path
          description: Channel config ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Channel config found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelConfigDTO'
        '404':
          description: Channel config not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelConfigDTO'
    put:
      tags:
        - Channel Configuration
      summary: Update a channel config
      description: Update an existing channel configuration
      operationId: updateChannelConfig
      parameters:
        - name: id
          in: path
          description: Channel config ID
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelConfigDTO'
        required: true
      responses:
        '200':
          description: Channel config updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelConfigDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelConfigDTO'
        '404':
          description: Channel config not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelConfigDTO'
    delete:
      tags:
        - Channel Configuration
      summary: Delete a channel config
      description: Soft delete a channel configuration (sets active=false)
      operationId: deleteChannelConfig
      parameters:
        - name: id
          in: path
          description: Channel config ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Channel config deleted
        '404':
          description: Channel config not found
  /api/v1/channel-config-parameters/{id}:
    get:
      tags:
        - Channel Config Parameters
      summary: Get channel config parameter by ID
      description: Retrieves a channel config parameter by its ID
      operationId: getById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Channel config parameter found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelConfigParameterDTO'
        '404':
          description: Channel config parameter not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelConfigParameterDTO'
    put:
      tags:
        - Channel Config Parameters
      summary: Update channel config parameter
      description: Updates an existing channel config parameter
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelConfigParameterDTO'
        required: true
      responses:
        '200':
          description: Channel config parameter updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelConfigParameterDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelConfigParameterDTO'
        '404':
          description: Channel config parameter not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelConfigParameterDTO'
    delete:
      tags:
        - Channel Config Parameters
      summary: Delete channel config parameter
      description: Deletes a channel config parameter (soft delete)
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Channel config parameter deleted successfully
        '404':
          description: Channel config parameter not found
  /api/v1/webhook-configs:
    post:
      tags:
        - Webhook Configuration
      summary: Create a new webhook configuration
      description: Creates a new webhook for receiving real-time event notifications. Required fields include webhook name, target URL, and event types to subscribe to. Configure authentication (NONE, BASIC, BEARER, API_KEY, HMAC, OAUTH2), retry behavior (max attempts, delay, exponential backoff), timeout settings, batching options, and circuit breaker thresholds. Webhooks can be tenant-specific or provider-specific. SSL verification is enabled by default for security.
      operationId: createWebhookConfig
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookConfigDTO'
        required: true
      responses:
        '201':
          description: Webhook configuration successfully created - Returns the created webhook with generated ID
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhookConfigDTO'
        '400':
          description: Invalid input - Validation errors (e.g., invalid URL, unsupported event types, invalid auth config)
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhookConfigDTO'
        '409':
          description: Conflict - A webhook with similar configuration already exists for this tenant/provider
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhookConfigDTO'
  /api/v1/webhook-configs/filter:
    post:
      tags:
        - Webhook Configuration
      summary: Search and filter webhook configurations
      description: Performs advanced filtering and pagination of webhook configurations. Supports filtering by tenant, provider, event types, enabled status, health status, and authentication type. Results include delivery metrics for monitoring webhook performance. Useful for webhook management dashboards and troubleshooting.
      operationId: filterWebhookConfigs
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.tenantId
          in: query
          description: Exact filter for tenant id
          required: false
          schema:
            type: string
        - name: filters.providerId
          in: query
          description: Exact filter for provider id
          required: false
          schema:
            type: string
        - name: filters.webhookName
          in: query
          description: Exact filter for webhook name
          required: false
          schema:
            type: string
        - name: filters.webhookUrl
          in: query
          description: Exact filter for webhook url
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.eventTypes
          in: query
          description: Exact filter for event types
          required: false
          schema:
            type: string
        - name: filters.httpMethod
          in: query
          description: Exact filter for http method
          required: false
          schema:
            type: string
        - name: filters.contentType
          in: query
          description: Exact filter for content type
          required: false
          schema:
            type: string
        - name: filters.webhookVersion
          in: query
          description: Exact filter for webhook version
          required: false
          schema:
            type: string
        - name: filters.authType
          in: query
          description: Exact filter for auth type
          required: false
          schema:
            type: string
        - name: filters.authHeaderName
          in: query
          description: Exact filter for auth header name
          required: false
          schema:
            type: string
        - name: filters.authHeaderValue
          in: query
          description: Exact filter for auth header value
          required: false
          schema:
            type: string
        - name: filters.secretKey
          in: query
          description: Exact filter for secret key
          required: false
          schema:
            type: string
        - name: filters.signatureAlgorithm
          in: query
          description: Exact filter for signature algorithm
          required: false
          schema:
            type: string
        - name: filters.signatureHeaderName
          in: query
          description: Exact filter for signature header name
          required: false
          schema:
            type: string
        - name: filters.verifySsl
          in: query
          description: Exact filter for verify ssl
          required: false
          schema:
            type: boolean
        - name: filters.followRedirects
          in: query
          description: Exact filter for follow redirects
          required: false
          schema:
            type: boolean
        - name: filters.customHeaders
          in: query
          description: Exact filter for custom headers
          required: false
          schema:
            type: string
        - name: filters.timeoutSeconds
          in: query
          description: Exact filter for timeout seconds
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[timeoutSeconds].from
          in: query
          description: Filter timeout seconds from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[timeoutSeconds].to
          in: query
          description: Filter timeout seconds to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.retryEnabled
          in: query
          description: Exact filter for retry enabled
          required: false
          schema:
            type: boolean
        - name: filters.maxRetryAttempts
          in: query
          description: Exact filter for max retry attempts
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[maxRetryAttempts].from
          in: query
          description: Filter max retry attempts from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[maxRetryAttempts].to
          in: query
          description: Filter max retry attempts to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.retryDelaySeconds
          in: query
          description: Exact filter for retry delay seconds
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[retryDelaySeconds].from
          in: query
          description: Filter retry delay seconds from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[retryDelaySeconds].to
          in: query
          description: Filter retry delay seconds to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.retryBackoffMultiplier
          in: query
          description: Exact filter for retry backoff multiplier
          required: false
          schema:
            type: number
        - name: rangeFilters.ranges[retryBackoffMultiplier].from
          in: query
          description: Filter retry backoff multiplier from value
          required: false
          schema:
            type: number
        - name: rangeFilters.ranges[retryBackoffMultiplier].to
          in: query
          description: Filter retry backoff multiplier to value
          required: false
          schema:
            type: number
        - name: filters.maxRetryDelaySeconds
          in: query
          description: Exact filter for max retry delay seconds
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[maxRetryDelaySeconds].from
          in: query
          description: Filter max retry delay seconds from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[maxRetryDelaySeconds].to
          in: query
          description: Filter max retry delay seconds to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.batchEvents
          in: query
          description: Exact filter for batch events
          required: false
          schema:
            type: boolean
        - name: filters.batchSize
          in: query
          description: Exact filter for batch size
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[batchSize].from
          in: query
          description: Filter batch size from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[batchSize].to
          in: query
          description: Filter batch size to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.batchWindowSeconds
          in: query
          description: Exact filter for batch window seconds
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[batchWindowSeconds].from
          in: query
          description: Filter batch window seconds from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[batchWindowSeconds].to
          in: query
          description: Filter batch window seconds to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.batchTimeoutSeconds
          in: query
          description: Exact filter for batch timeout seconds
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[batchTimeoutSeconds].from
          in: query
          description: Filter batch timeout seconds from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[batchTimeoutSeconds].to
          in: query
          description: Filter batch timeout seconds to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.deadLetterQueueEnabled
          in: query
          description: Exact filter for dead letter queue enabled
          required: false
          schema:
            type: boolean
        - name: filters.maxDeadLetterRetries
          in: query
          description: Exact filter for max dead letter retries
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[maxDeadLetterRetries].from
          in: query
          description: Filter max dead letter retries from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[maxDeadLetterRetries].to
          in: query
          description: Filter max dead letter retries to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.asyncProcessing
          in: query
          description: Exact filter for async processing
          required: false
          schema:
            type: boolean
        - name: filters.priority
          in: query
          description: Exact filter for priority
          required: false
          schema:
            type: string
        - name: filters.circuitBreakerEnabled
          in: query
          description: Exact filter for circuit breaker enabled
          required: false
          schema:
            type: boolean
        - name: filters.circuitBreakerThreshold
          in: query
          description: Exact filter for circuit breaker threshold
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[circuitBreakerThreshold].from
          in: query
          description: Filter circuit breaker threshold from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[circuitBreakerThreshold].to
          in: query
          description: Filter circuit breaker threshold to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.circuitBreakerTimeoutSeconds
          in: query
          description: Exact filter for circuit breaker timeout seconds
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[circuitBreakerTimeoutSeconds].from
          in: query
          description: Filter circuit breaker timeout seconds from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[circuitBreakerTimeoutSeconds].to
          in: query
          description: Filter circuit breaker timeout seconds to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.lastTriggeredAt
          in: query
          description: Exact filter for last triggered at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lastTriggeredAt].from
          in: query
          description: Filter last triggered at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lastTriggeredAt].to
          in: query
          description: Filter last triggered at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.totalTriggersCount
          in: query
          description: Exact filter for total triggers count
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[totalTriggersCount].from
          in: query
          description: Filter total triggers count from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[totalTriggersCount].to
          in: query
          description: Filter total triggers count to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.totalSuccessCount
          in: query
          description: Exact filter for total success count
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[totalSuccessCount].from
          in: query
          description: Filter total success count from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[totalSuccessCount].to
          in: query
          description: Filter total success count to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.totalFailureCount
          in: query
          description: Exact filter for total failure count
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[totalFailureCount].from
          in: query
          description: Filter total failure count from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[totalFailureCount].to
          in: query
          description: Filter total failure count to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.averageResponseTimeMs
          in: query
          description: Exact filter for average response time ms
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[averageResponseTimeMs].from
          in: query
          description: Filter average response time ms from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[averageResponseTimeMs].to
          in: query
          description: Filter average response time ms to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.lastSuccessAt
          in: query
          description: Exact filter for last success at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lastSuccessAt].from
          in: query
          description: Filter last success at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lastSuccessAt].to
          in: query
          description: Filter last success at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.lastFailureAt
          in: query
          description: Exact filter for last failure at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lastFailureAt].from
          in: query
          description: Filter last failure at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lastFailureAt].to
          in: query
          description: Filter last failure at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.lastFailureReason
          in: query
          description: Exact filter for last failure reason
          required: false
          schema:
            type: string
        - name: filters.healthStatus
          in: query
          description: Exact filter for health status
          required: false
          schema:
            type: string
        - name: filters.consecutiveFailureCount
          in: query
          description: Exact filter for consecutive failure count
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[consecutiveFailureCount].from
          in: query
          description: Filter consecutive failure count from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[consecutiveFailureCount].to
          in: query
          description: Filter consecutive failure count to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.healthCheckEnabled
          in: query
          description: Exact filter for health check enabled
          required: false
          schema:
            type: boolean
        - name: filters.healthCheckIntervalSeconds
          in: query
          description: Exact filter for health check interval seconds
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[healthCheckIntervalSeconds].from
          in: query
          description: Filter health check interval seconds from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[healthCheckIntervalSeconds].to
          in: query
          description: Filter health check interval seconds to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.enabled
          in: query
          description: Exact filter for enabled
          required: false
          schema:
            type: boolean
        - name: filters.metadata
          in: query
          description: Exact filter for metadata
          required: false
          schema:
            type: string
        - name: filters.active
          in: query
          description: Exact filter for active
          required: false
          schema:
            type: boolean
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Filtered webhook configurations successfully retrieved with pagination metadata
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseWebhookConfigDTO'
        '400':
          description: Invalid filter criteria - Check filter syntax and field names
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseWebhookConfigDTO'
  /api/v1/tenants:
    post:
      tags:
        - Tenant Management
      summary: Create a new tenant
      description: Creates a new tenant instance in the Firefly platform. This establishes a new logical separation with independent configuration space. Required fields include code (unique identifier), name, and tenant status. Optional fields allow setting legal entity information, hierarchical relationships (parent tenant), risk ratings, compliance requirements, and subscription details. Upon creation, default settings and branding can be initialized automatically.
      operationId: createTenant
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantDTO'
        required: true
      responses:
        '201':
          description: Tenant successfully created - Returns the created tenant with generated ID and timestamps
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantDTO'
        '400':
          description: Invalid input - Validation errors in tenant data (e.g., duplicate code, missing required fields)
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantDTO'
        '409':
          description: Conflict - A tenant with the specified code already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantDTO'
  /api/v1/tenants/{tenantId}/providers:
    post:
      tags:
        - Tenant Management
      summary: Associate provider with tenant
      description: Creates a new provider-tenant relationship, enabling the tenant to use a specific external service provider. Configure provider-specific settings including priority (for load balancing), billing model, transaction limits, failover behavior, circuit breaker settings, and custom configuration overrides. Multiple providers of the same type can be configured with different priorities for redundancy and load distribution.
      operationId: addProviderToTenant
      parameters:
        - name: tenantId
          in: path
          description: Unique identifier (UUID) of the tenant
          required: true
          schema:
            type: string
            format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderTenantDTO'
        required: true
      responses:
        '201':
          description: Provider successfully associated with tenant - Returns the created relationship configuration
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
        '400':
          description: Invalid input - Validation errors or invalid provider/tenant combination
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
        '404':
          description: Tenant or provider not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
        '409':
          description: Conflict - Provider already associated with this tenant
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
  /api/v1/tenants/{tenantId}/providers/filter:
    post:
      tags:
        - Tenant Management
      summary: List tenant's provider relationships
      description: Retrieves all provider relationships configured for a specific tenant with filtering and pagination. Shows which external service providers (payment gateways, KYC services, etc.) are available to this tenant, including configuration overrides, billing settings, priority, failover configuration, and usage metrics. Useful for managing tenant-specific provider integrations and monitoring provider health.
      operationId: filterTenantProviders
      parameters:
        - name: tenantId
          in: path
          description: Unique identifier (UUID) of the tenant whose providers to retrieve
          required: true
          schema:
            type: string
            format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestProviderTenantDTO'
        required: true
      responses:
        '200':
          description: Provider relationships successfully retrieved with pagination metadata
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseProviderTenantDTO'
        '404':
          description: Tenant not found - The specified tenant ID does not exist
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseProviderTenantDTO'
  /api/v1/tenants/filter:
    post:
      tags:
        - Tenant Management
      summary: Search and filter tenants
      description: Performs advanced filtering and pagination of tenants based on multiple criteria. Supports filtering by status, type, risk rating, compliance tier, subscription tier, parent tenant, and custom metadata. Results are paginated and can be sorted by any field. Useful for administrative dashboards, reporting, and tenant discovery.
      operationId: filterTenants
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.code
          in: query
          description: Exact filter for code
          required: false
          schema:
            type: string
        - name: filters.name
          in: query
          description: Exact filter for name
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.tenantStatusId
          in: query
          description: Exact filter for tenant status id
          required: false
          schema:
            type: string
        - name: filters.countryId
          in: query
          description: Exact filter for country id
          required: false
          schema:
            type: string
        - name: filters.timezone
          in: query
          description: Exact filter for timezone
          required: false
          schema:
            type: string
        - name: filters.defaultCurrencyCode
          in: query
          description: Exact filter for default currency code
          required: false
          schema:
            type: string
        - name: filters.defaultLanguageCode
          in: query
          description: Exact filter for default language code
          required: false
          schema:
            type: string
        - name: filters.legalEntityName
          in: query
          description: Exact filter for legal entity name
          required: false
          schema:
            type: string
        - name: filters.taxIdentificationNumber
          in: query
          description: Exact filter for tax identification number
          required: false
          schema:
            type: string
        - name: filters.registrationNumber
          in: query
          description: Exact filter for registration number
          required: false
          schema:
            type: string
        - name: filters.incorporationDate
          in: query
          description: Exact filter for incorporation date
          required: false
          schema:
            type: string
        - name: filters.regulatoryLicenseNumber
          in: query
          description: Exact filter for regulatory license number
          required: false
          schema:
            type: string
        - name: filters.regulatoryAuthority
          in: query
          description: Exact filter for regulatory authority
          required: false
          schema:
            type: string
        - name: filters.businessContactName
          in: query
          description: Exact filter for business contact name
          required: false
          schema:
            type: string
        - name: filters.businessContactEmail
          in: query
          description: Exact filter for business contact email
          required: false
          schema:
            type: string
        - name: filters.businessContactPhone
          in: query
          description: Exact filter for business contact phone
          required: false
          schema:
            type: string
        - name: filters.technicalContactName
          in: query
          description: Exact filter for technical contact name
          required: false
          schema:
            type: string
        - name: filters.technicalContactEmail
          in: query
          description: Exact filter for technical contact email
          required: false
          schema:
            type: string
        - name: filters.technicalContactPhone
          in: query
          description: Exact filter for technical contact phone
          required: false
          schema:
            type: string
        - name: filters.parentTenantId
          in: query
          description: Exact filter for parent tenant id
          required: false
          schema:
            type: string
        - name: filters.tenantType
          in: query
          description: Exact filter for tenant type
          required: false
          schema:
            type: string
        - name: filters.industrySector
          in: query
          description: Exact filter for industry sector
          required: false
          schema:
            type: string
        - name: filters.employeeCountRange
          in: query
          description: Exact filter for employee count range
          required: false
          schema:
            type: string
        - name: filters.annualRevenueRange
          in: query
          description: Exact filter for annual revenue range
          required: false
          schema:
            type: string
        - name: filters.riskRating
          in: query
          description: Exact filter for risk rating
          required: false
          schema:
            type: string
        - name: filters.complianceTier
          in: query
          description: Exact filter for compliance tier
          required: false
          schema:
            type: string
        - name: filters.dataClassification
          in: query
          description: Exact filter for data classification
          required: false
          schema:
            type: string
        - name: filters.slaTier
          in: query
          description: Exact filter for sla tier
          required: false
          schema:
            type: string
        - name: filters.subscriptionTier
          in: query
          description: Exact filter for subscription tier
          required: false
          schema:
            type: string
        - name: filters.subscriptionStartDate
          in: query
          description: Exact filter for subscription start date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[subscriptionStartDate].from
          in: query
          description: Filter subscription start date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[subscriptionStartDate].to
          in: query
          description: Filter subscription start date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.subscriptionEndDate
          in: query
          description: Exact filter for subscription end date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[subscriptionEndDate].from
          in: query
          description: Filter subscription end date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[subscriptionEndDate].to
          in: query
          description: Filter subscription end date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.isTrial
          in: query
          description: Exact filter for is trial
          required: false
          schema:
            type: boolean
        - name: filters.trialEndDate
          in: query
          description: Exact filter for trial end date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[trialEndDate].from
          in: query
          description: Filter trial end date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[trialEndDate].to
          in: query
          description: Filter trial end date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.billingCurrencyCode
          in: query
          description: Exact filter for billing currency code
          required: false
          schema:
            type: string
        - name: filters.billingCycle
          in: query
          description: Exact filter for billing cycle
          required: false
          schema:
            type: string
        - name: filters.paymentTermsDays
          in: query
          description: Exact filter for payment terms days
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[paymentTermsDays].from
          in: query
          description: Filter payment terms days from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[paymentTermsDays].to
          in: query
          description: Filter payment terms days to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.metadata
          in: query
          description: Exact filter for metadata
          required: false
          schema:
            type: string
        - name: filters.active
          in: query
          description: Exact filter for active
          required: false
          schema:
            type: boolean
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Filtered tenant list successfully retrieved with pagination metadata
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseTenantDTO'
        '400':
          description: Invalid filter criteria - Check filter syntax and field names
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseTenantDTO'
  /api/v1/tenant-statuses:
    post:
      tags:
        - Tenant Statuses
      summary: Create a new tenant status
      description: Creates a new tenant status and returns it
      operationId: createTenantStatus
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantStatusDTO'
        required: true
      responses:
        '201':
          description: Tenant status created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantStatusDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantStatusDTO'
  /api/v1/tenant-statuses/filter:
    post:
      tags:
        - Tenant Statuses
      summary: Filter tenant statuses
      description: Returns a filtered list of tenant statuses based on criteria
      operationId: filterTenantStatuses
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.code
          in: query
          description: Exact filter for code
          required: false
          schema:
            type: string
        - name: filters.name
          in: query
          description: Exact filter for name
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.active
          in: query
          description: Exact filter for active
          required: false
          schema:
            type: boolean
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseTenantStatusDTO'
  /api/v1/tenant-settings:
    post:
      tags:
        - Tenant Settings
      summary: Create new tenant settings
      operationId: createTenantSettings
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantSettingsDTO'
        required: true
      responses:
        '201':
          description: Tenant settings created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantSettingsDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantSettingsDTO'
  /api/v1/tenant-settings/filter:
    post:
      tags:
        - Tenant Settings
      summary: Filter tenant settings
      operationId: filterTenantSettings
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.tenantId
          in: query
          description: Exact filter for tenant id
          required: false
          schema:
            type: string
        - name: filters.apiRateLimitPerMinute
          in: query
          description: Exact filter for api rate limit per minute
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[apiRateLimitPerMinute].from
          in: query
          description: Filter api rate limit per minute from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[apiRateLimitPerMinute].to
          in: query
          description: Filter api rate limit per minute to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.apiRateLimitPerHour
          in: query
          description: Exact filter for api rate limit per hour
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[apiRateLimitPerHour].from
          in: query
          description: Filter api rate limit per hour from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[apiRateLimitPerHour].to
          in: query
          description: Filter api rate limit per hour to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.apiRateLimitPerDay
          in: query
          description: Exact filter for api rate limit per day
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[apiRateLimitPerDay].from
          in: query
          description: Filter api rate limit per day from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[apiRateLimitPerDay].to
          in: query
          description: Filter api rate limit per day to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.passwordMinLength
          in: query
          description: Exact filter for password min length
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[passwordMinLength].from
          in: query
          description: Filter password min length from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[passwordMinLength].to
          in: query
          description: Filter password min length to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.passwordRequireUppercase
          in: query
          description: Exact filter for password require uppercase
          required: false
          schema:
            type: boolean
        - name: filters.passwordRequireLowercase
          in: query
          description: Exact filter for password require lowercase
          required: false
          schema:
            type: boolean
        - name: filters.passwordRequireNumbers
          in: query
          description: Exact filter for password require numbers
          required: false
          schema:
            type: boolean
        - name: filters.passwordRequireSpecialChars
          in: query
          description: Exact filter for password require special chars
          required: false
          schema:
            type: boolean
        - name: filters.passwordExpiryDays
          in: query
          description: Exact filter for password expiry days
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[passwordExpiryDays].from
          in: query
          description: Filter password expiry days from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[passwordExpiryDays].to
          in: query
          description: Filter password expiry days to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.passwordHistoryCount
          in: query
          description: Exact filter for password history count
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[passwordHistoryCount].from
          in: query
          description: Filter password history count from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[passwordHistoryCount].to
          in: query
          description: Filter password history count to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.mfaEnabled
          in: query
          description: Exact filter for mfa enabled
          required: false
          schema:
            type: boolean
        - name: filters.mfaRequired
          in: query
          description: Exact filter for mfa required
          required: false
          schema:
            type: boolean
        - name: filters.twoFactorAuthMethods
          in: query
          description: Exact filter for two factor auth methods
          required: false
          schema:
            type: string
        - name: filters.sessionTimeoutMinutes
          in: query
          description: Exact filter for session timeout minutes
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[sessionTimeoutMinutes].from
          in: query
          description: Filter session timeout minutes from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[sessionTimeoutMinutes].to
          in: query
          description: Filter session timeout minutes to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.sessionIdleTimeoutMinutes
          in: query
          description: Exact filter for session idle timeout minutes
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[sessionIdleTimeoutMinutes].from
          in: query
          description: Filter session idle timeout minutes from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[sessionIdleTimeoutMinutes].to
          in: query
          description: Filter session idle timeout minutes to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.concurrentSessionsLimit
          in: query
          description: Exact filter for concurrent sessions limit
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[concurrentSessionsLimit].from
          in: query
          description: Filter concurrent sessions limit from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[concurrentSessionsLimit].to
          in: query
          description: Filter concurrent sessions limit to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.maxLoginAttempts
          in: query
          description: Exact filter for max login attempts
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[maxLoginAttempts].from
          in: query
          description: Filter max login attempts from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[maxLoginAttempts].to
          in: query
          description: Filter max login attempts to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.accountLockoutDurationMinutes
          in: query
          description: Exact filter for account lockout duration minutes
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[accountLockoutDurationMinutes].from
          in: query
          description: Filter account lockout duration minutes from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[accountLockoutDurationMinutes].to
          in: query
          description: Filter account lockout duration minutes to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.forcePasswordChangeOnFirstLogin
          in: query
          description: Exact filter for force password change on first login
          required: false
          schema:
            type: boolean
        - name: filters.apiKeyRotationDays
          in: query
          description: Exact filter for api key rotation days
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[apiKeyRotationDays].from
          in: query
          description: Filter api key rotation days from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[apiKeyRotationDays].to
          in: query
          description: Filter api key rotation days to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.encryptionAlgorithm
          in: query
          description: Exact filter for encryption algorithm
          required: false
          schema:
            type: string
        - name: filters.ipWhitelist
          in: query
          description: Exact filter for ip whitelist
          required: false
          schema:
            type: string
        - name: filters.ipBlacklist
          in: query
          description: Exact filter for ip blacklist
          required: false
          schema:
            type: string
        - name: filters.geoBlockingEnabled
          in: query
          description: Exact filter for geo blocking enabled
          required: false
          schema:
            type: boolean
        - name: filters.allowedCountries
          in: query
          description: Exact filter for allowed countries
          required: false
          schema:
            type: string
        - name: filters.blockedCountries
          in: query
          description: Exact filter for blocked countries
          required: false
          schema:
            type: string
        - name: filters.gdprEnabled
          in: query
          description: Exact filter for gdpr enabled
          required: false
          schema:
            type: boolean
        - name: filters.pciDssEnabled
          in: query
          description: Exact filter for pci dss enabled
          required: false
          schema:
            type: boolean
        - name: filters.soxComplianceEnabled
          in: query
          description: Exact filter for sox compliance enabled
          required: false
          schema:
            type: boolean
        - name: filters.hipaaComplianceEnabled
          in: query
          description: Exact filter for hipaa compliance enabled
          required: false
          schema:
            type: boolean
        - name: filters.iso27001ComplianceEnabled
          in: query
          description: Exact filter for iso27001 compliance enabled
          required: false
          schema:
            type: boolean
        - name: filters.dataResidencyCountry
          in: query
          description: Exact filter for data residency country
          required: false
          schema:
            type: string
        - name: filters.regulatoryReportingEnabled
          in: query
          description: Exact filter for regulatory reporting enabled
          required: false
          schema:
            type: boolean
        - name: filters.regulatoryReportingFrequency
          in: query
          description: Exact filter for regulatory reporting frequency
          required: false
          schema:
            type: string
        - name: filters.fraudDetectionEnabled
          in: query
          description: Exact filter for fraud detection enabled
          required: false
          schema:
            type: boolean
        - name: filters.fraudScoreThreshold
          in: query
          description: Exact filter for fraud score threshold
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[fraudScoreThreshold].from
          in: query
          description: Filter fraud score threshold from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[fraudScoreThreshold].to
          in: query
          description: Filter fraud score threshold to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.transactionMonitoringEnabled
          in: query
          description: Exact filter for transaction monitoring enabled
          required: false
          schema:
            type: boolean
        - name: filters.amlScreeningEnabled
          in: query
          description: Exact filter for aml screening enabled
          required: false
          schema:
            type: boolean
        - name: filters.sanctionsScreeningEnabled
          in: query
          description: Exact filter for sanctions screening enabled
          required: false
          schema:
            type: boolean
        - name: filters.kycVerificationRequired
          in: query
          description: Exact filter for kyc verification required
          required: false
          schema:
            type: boolean
        - name: filters.kycRefreshIntervalDays
          in: query
          description: Exact filter for kyc refresh interval days
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[kycRefreshIntervalDays].from
          in: query
          description: Filter kyc refresh interval days from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[kycRefreshIntervalDays].to
          in: query
          description: Filter kyc refresh interval days to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.documentVerificationRequired
          in: query
          description: Exact filter for document verification required
          required: false
          schema:
            type: boolean
        - name: filters.biometricVerificationEnabled
          in: query
          description: Exact filter for biometric verification enabled
          required: false
          schema:
            type: boolean
        - name: filters.circuitBreakerEnabled
          in: query
          description: Exact filter for circuit breaker enabled
          required: false
          schema:
            type: boolean
        - name: filters.circuitBreakerFailureThreshold
          in: query
          description: Exact filter for circuit breaker failure threshold
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[circuitBreakerFailureThreshold].from
          in: query
          description: Filter circuit breaker failure threshold from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[circuitBreakerFailureThreshold].to
          in: query
          description: Filter circuit breaker failure threshold to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.circuitBreakerTimeoutSeconds
          in: query
          description: Exact filter for circuit breaker timeout seconds
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[circuitBreakerTimeoutSeconds].from
          in: query
          description: Filter circuit breaker timeout seconds from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[circuitBreakerTimeoutSeconds].to
          in: query
          description: Filter circuit breaker timeout seconds to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.circuitBreakerResetTimeoutSeconds
          in: query
          description: Exact filter for circuit breaker reset timeout seconds
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[circuitBreakerResetTimeoutSeconds].from
          in: query
          description: Filter circuit breaker reset timeout seconds from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[circuitBreakerResetTimeoutSeconds].to
          in: query
          description: Filter circuit breaker reset timeout seconds to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.maintenanceModeEnabled
          in: query
          description: Exact filter for maintenance mode enabled
          required: false
          schema:
            type: boolean
        - name: filters.maintenanceStartTime
          in: query
          description: Exact filter for maintenance start time
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[maintenanceStartTime].from
          in: query
          description: Filter maintenance start time from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[maintenanceStartTime].to
          in: query
          description: Filter maintenance start time to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.maintenanceEndTime
          in: query
          description: Exact filter for maintenance end time
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[maintenanceEndTime].from
          in: query
          description: Filter maintenance end time from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[maintenanceEndTime].to
          in: query
          description: Filter maintenance end time to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.maintenanceMessage
          in: query
          description: Exact filter for maintenance message
          required: false
          schema:
            type: string
        - name: filters.auditEnabled
          in: query
          description: Exact filter for audit enabled
          required: false
          schema:
            type: boolean
        - name: filters.auditRetentionDays
          in: query
          description: Exact filter for audit retention days
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[auditRetentionDays].from
          in: query
          description: Filter audit retention days from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[auditRetentionDays].to
          in: query
          description: Filter audit retention days to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.logLevel
          in: query
          description: Exact filter for log level
          required: false
          schema:
            type: string
        - name: filters.sensitiveDataMaskingEnabled
          in: query
          description: Exact filter for sensitive data masking enabled
          required: false
          schema:
            type: boolean
        - name: filters.dataRetentionPolicy
          in: query
          description: Exact filter for data retention policy
          required: false
          schema:
            type: string
        - name: filters.transactionRetentionDays
          in: query
          description: Exact filter for transaction retention days
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[transactionRetentionDays].from
          in: query
          description: Filter transaction retention days from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[transactionRetentionDays].to
          in: query
          description: Filter transaction retention days to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.documentRetentionDays
          in: query
          description: Exact filter for document retention days
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[documentRetentionDays].from
          in: query
          description: Filter document retention days from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[documentRetentionDays].to
          in: query
          description: Filter document retention days to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.autoArchiveEnabled
          in: query
          description: Exact filter for auto archive enabled
          required: false
          schema:
            type: boolean
        - name: filters.archiveAfterDays
          in: query
          description: Exact filter for archive after days
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[archiveAfterDays].from
          in: query
          description: Filter archive after days from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[archiveAfterDays].to
          in: query
          description: Filter archive after days to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.autoDeleteEnabled
          in: query
          description: Exact filter for auto delete enabled
          required: false
          schema:
            type: boolean
        - name: filters.deleteAfterDays
          in: query
          description: Exact filter for delete after days
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[deleteAfterDays].from
          in: query
          description: Filter delete after days from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[deleteAfterDays].to
          in: query
          description: Filter delete after days to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.backupEnabled
          in: query
          description: Exact filter for backup enabled
          required: false
          schema:
            type: boolean
        - name: filters.backupFrequencyHours
          in: query
          description: Exact filter for backup frequency hours
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[backupFrequencyHours].from
          in: query
          description: Filter backup frequency hours from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[backupFrequencyHours].to
          in: query
          description: Filter backup frequency hours to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.backupRetentionDays
          in: query
          description: Exact filter for backup retention days
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[backupRetentionDays].from
          in: query
          description: Filter backup retention days from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[backupRetentionDays].to
          in: query
          description: Filter backup retention days to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.disasterRecoveryEnabled
          in: query
          description: Exact filter for disaster recovery enabled
          required: false
          schema:
            type: boolean
        - name: filters.pointInTimeRecoveryEnabled
          in: query
          description: Exact filter for point in time recovery enabled
          required: false
          schema:
            type: boolean
        - name: filters.crossRegionReplicationEnabled
          in: query
          description: Exact filter for cross region replication enabled
          required: false
          schema:
            type: boolean
        - name: filters.replicationRegions
          in: query
          description: Exact filter for replication regions
          required: false
          schema:
            type: string
        - name: filters.emailNotificationsEnabled
          in: query
          description: Exact filter for email notifications enabled
          required: false
          schema:
            type: boolean
        - name: filters.smsNotificationsEnabled
          in: query
          description: Exact filter for sms notifications enabled
          required: false
          schema:
            type: boolean
        - name: filters.pushNotificationsEnabled
          in: query
          description: Exact filter for push notifications enabled
          required: false
          schema:
            type: boolean
        - name: filters.webhookNotificationsEnabled
          in: query
          description: Exact filter for webhook notifications enabled
          required: false
          schema:
            type: boolean
        - name: filters.metadata
          in: query
          description: Exact filter for metadata
          required: false
          schema:
            type: string
        - name: filters.active
          in: query
          description: Exact filter for active
          required: false
          schema:
            type: boolean
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseTenantSettingsDTO'
  /api/v1/tenant-brandings:
    post:
      tags:
        - Tenant Brandings
      summary: Create a new tenant branding
      operationId: createTenantBranding
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantBrandingDTO'
        required: true
      responses:
        '201':
          description: Tenant branding created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantBrandingDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantBrandingDTO'
  /api/v1/tenant-brandings/filter:
    post:
      tags:
        - Tenant Brandings
      summary: Filter tenant brandings
      operationId: filterTenantBrandings
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.tenantId
          in: query
          description: Exact filter for tenant id
          required: false
          schema:
            type: string
        - name: filters.logoUrl
          in: query
          description: Exact filter for logo url
          required: false
          schema:
            type: string
        - name: filters.logoDarkUrl
          in: query
          description: Exact filter for logo dark url
          required: false
          schema:
            type: string
        - name: filters.faviconUrl
          in: query
          description: Exact filter for favicon url
          required: false
          schema:
            type: string
        - name: filters.primaryColor
          in: query
          description: Exact filter for primary color
          required: false
          schema:
            type: string
        - name: filters.secondaryColor
          in: query
          description: Exact filter for secondary color
          required: false
          schema:
            type: string
        - name: filters.accentColor
          in: query
          description: Exact filter for accent color
          required: false
          schema:
            type: string
        - name: filters.backgroundColor
          in: query
          description: Exact filter for background color
          required: false
          schema:
            type: string
        - name: filters.textColor
          in: query
          description: Exact filter for text color
          required: false
          schema:
            type: string
        - name: filters.fontFamily
          in: query
          description: Exact filter for font family
          required: false
          schema:
            type: string
        - name: filters.customCss
          in: query
          description: Exact filter for custom css
          required: false
          schema:
            type: string
        - name: filters.emailHeaderUrl
          in: query
          description: Exact filter for email header url
          required: false
          schema:
            type: string
        - name: filters.emailFooterText
          in: query
          description: Exact filter for email footer text
          required: false
          schema:
            type: string
        - name: filters.metadata
          in: query
          description: Exact filter for metadata
          required: false
          schema:
            type: string
        - name: filters.active
          in: query
          description: Exact filter for active
          required: false
          schema:
            type: boolean
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseTenantBrandingDTO'
  /api/v1/providers:
    post:
      tags:
        - Provider Management
      summary: Register a new provider
      description: Registers a new external service provider in the Firefly platform. Required fields include unique code, name, provider type (PAYMENT_GATEWAY, KYC, CARD_ISSUING, etc.), and status. Configure API endpoints (production/sandbox URLs), supported capabilities (countries, currencies, languages), SLA commitments, compliance certifications, contract details, and contact information. Health monitoring can be enabled by providing a health check URL.
      operationId: createProvider
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderDTO'
        required: true
      responses:
        '201':
          description: Provider successfully registered - Returns the created provider with generated ID and timestamps
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderDTO'
        '400':
          description: Invalid input - Validation errors in provider data (e.g., duplicate code, invalid URLs)
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderDTO'
        '409':
          description: Conflict - A provider with the specified code already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderDTO'
  /api/v1/providers/filter:
    post:
      tags:
        - Provider Management
      summary: Search and filter providers
      description: Performs advanced filtering and pagination of providers based on multiple criteria. Supports filtering by provider type (PAYMENT_GATEWAY, KYC, CARD_ISSUING, etc.), status, supported countries/currencies, certification level, health status, and custom metadata. Results are paginated and can be sorted by any field. Useful for provider discovery, administrative dashboards, and integration planning.
      operationId: filterProviders
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.code
          in: query
          description: Exact filter for code
          required: false
          schema:
            type: string
        - name: filters.name
          in: query
          description: Exact filter for name
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.providerTypeId
          in: query
          description: Exact filter for provider type id
          required: false
          schema:
            type: string
        - name: filters.providerStatusId
          in: query
          description: Exact filter for provider status id
          required: false
          schema:
            type: string
        - name: filters.baseUrl
          in: query
          description: Exact filter for base url
          required: false
          schema:
            type: string
        - name: filters.productionUrl
          in: query
          description: Exact filter for production url
          required: false
          schema:
            type: string
        - name: filters.sandboxUrl
          in: query
          description: Exact filter for sandbox url
          required: false
          schema:
            type: string
        - name: filters.supportsSandbox
          in: query
          description: Exact filter for supports sandbox
          required: false
          schema:
            type: boolean
        - name: filters.apiVersion
          in: query
          description: Exact filter for api version
          required: false
          schema:
            type: string
        - name: filters.documentationUrl
          in: query
          description: Exact filter for documentation url
          required: false
          schema:
            type: string
        - name: filters.providerCategory
          in: query
          description: Exact filter for provider category
          required: false
          schema:
            type: string
        - name: filters.webhookSupport
          in: query
          description: Exact filter for webhook support
          required: false
          schema:
            type: boolean
        - name: filters.batchProcessingSupport
          in: query
          description: Exact filter for batch processing support
          required: false
          schema:
            type: boolean
        - name: filters.realTimeProcessingSupport
          in: query
          description: Exact filter for real time processing support
          required: false
          schema:
            type: boolean
        - name: filters.supportedCountries
          in: query
          description: Exact filter for supported countries
          required: false
          schema:
            type: string
        - name: filters.supportedCurrencies
          in: query
          description: Exact filter for supported currencies
          required: false
          schema:
            type: string
        - name: filters.supportedLanguages
          in: query
          description: Exact filter for supported languages
          required: false
          schema:
            type: string
        - name: filters.slaUptimePercentage
          in: query
          description: Exact filter for sla uptime percentage
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[slaUptimePercentage].from
          in: query
          description: Filter sla uptime percentage from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[slaUptimePercentage].to
          in: query
          description: Filter sla uptime percentage to value
          required: false
          schema:
            type: string
        - name: filters.maxResponseTimeMs
          in: query
          description: Exact filter for max response time ms
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[maxResponseTimeMs].from
          in: query
          description: Filter max response time ms from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[maxResponseTimeMs].to
          in: query
          description: Filter max response time ms to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.rateLimitPerSecond
          in: query
          description: Exact filter for rate limit per second
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[rateLimitPerSecond].from
          in: query
          description: Filter rate limit per second from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[rateLimitPerSecond].to
          in: query
          description: Filter rate limit per second to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.rateLimitPerMinute
          in: query
          description: Exact filter for rate limit per minute
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[rateLimitPerMinute].from
          in: query
          description: Filter rate limit per minute from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[rateLimitPerMinute].to
          in: query
          description: Filter rate limit per minute to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.rateLimitPerHour
          in: query
          description: Exact filter for rate limit per hour
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[rateLimitPerHour].from
          in: query
          description: Filter rate limit per hour from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[rateLimitPerHour].to
          in: query
          description: Filter rate limit per hour to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.certificationLevel
          in: query
          description: Exact filter for certification level
          required: false
          schema:
            type: string
        - name: filters.complianceCertifications
          in: query
          description: Exact filter for compliance certifications
          required: false
          schema:
            type: string
        - name: filters.pricingModel
          in: query
          description: Exact filter for pricing model
          required: false
          schema:
            type: string
        - name: filters.contractStartDate
          in: query
          description: Exact filter for contract start date
          required: false
          schema:
            type: string
        - name: filters.contractEndDate
          in: query
          description: Exact filter for contract end date
          required: false
          schema:
            type: string
        - name: filters.autoRenewal
          in: query
          description: Exact filter for auto renewal
          required: false
          schema:
            type: boolean
        - name: filters.noticePeriodDays
          in: query
          description: Exact filter for notice period days
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[noticePeriodDays].from
          in: query
          description: Filter notice period days from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[noticePeriodDays].to
          in: query
          description: Filter notice period days to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.primaryContactName
          in: query
          description: Exact filter for primary contact name
          required: false
          schema:
            type: string
        - name: filters.primaryContactEmail
          in: query
          description: Exact filter for primary contact email
          required: false
          schema:
            type: string
        - name: filters.primaryContactPhone
          in: query
          description: Exact filter for primary contact phone
          required: false
          schema:
            type: string
        - name: filters.escalationContactName
          in: query
          description: Exact filter for escalation contact name
          required: false
          schema:
            type: string
        - name: filters.escalationContactEmail
          in: query
          description: Exact filter for escalation contact email
          required: false
          schema:
            type: string
        - name: filters.escalationContactPhone
          in: query
          description: Exact filter for escalation contact phone
          required: false
          schema:
            type: string
        - name: filters.supportEmail
          in: query
          description: Exact filter for support email
          required: false
          schema:
            type: string
        - name: filters.supportPhone
          in: query
          description: Exact filter for support phone
          required: false
          schema:
            type: string
        - name: filters.healthCheckUrl
          in: query
          description: Exact filter for health check url
          required: false
          schema:
            type: string
        - name: filters.healthCheckIntervalSeconds
          in: query
          description: Exact filter for health check interval seconds
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[healthCheckIntervalSeconds].from
          in: query
          description: Filter health check interval seconds from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[healthCheckIntervalSeconds].to
          in: query
          description: Filter health check interval seconds to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.healthCheckTimeoutSeconds
          in: query
          description: Exact filter for health check timeout seconds
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[healthCheckTimeoutSeconds].from
          in: query
          description: Filter health check timeout seconds from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[healthCheckTimeoutSeconds].to
          in: query
          description: Filter health check timeout seconds to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.healthCheckStatus
          in: query
          description: Exact filter for health check status
          required: false
          schema:
            type: string
        - name: filters.lastHealthCheckAt
          in: query
          description: Exact filter for last health check at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lastHealthCheckAt].from
          in: query
          description: Filter last health check at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lastHealthCheckAt].to
          in: query
          description: Filter last health check at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.lastHealthCheckFailureAt
          in: query
          description: Exact filter for last health check failure at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lastHealthCheckFailureAt].from
          in: query
          description: Filter last health check failure at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lastHealthCheckFailureAt].to
          in: query
          description: Filter last health check failure at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.consecutiveFailureCount
          in: query
          description: Exact filter for consecutive failure count
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[consecutiveFailureCount].from
          in: query
          description: Filter consecutive failure count from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[consecutiveFailureCount].to
          in: query
          description: Filter consecutive failure count to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.metadata
          in: query
          description: Exact filter for metadata
          required: false
          schema:
            type: string
        - name: filters.active
          in: query
          description: Exact filter for active
          required: false
          schema:
            type: boolean
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Filtered provider list successfully retrieved with pagination metadata
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseProviderDTO'
        '400':
          description: Invalid filter criteria - Check filter syntax and field names
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseProviderDTO'
  /api/v1/provider-value-mappings:
    post:
      tags:
        - Provider Value Mappings
      summary: Create a new provider value mapping
      operationId: createProviderValueMapping
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderValueMappingDTO'
        required: true
      responses:
        '201':
          description: Provider value mapping created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderValueMappingDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderValueMappingDTO'
  /api/v1/provider-value-mappings/filter:
    post:
      tags:
        - Provider Value Mappings
      summary: Filter provider value mappings
      operationId: filterProviderValueMappings
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.providerId
          in: query
          description: Exact filter for provider id
          required: false
          schema:
            type: string
        - name: filters.tenantId
          in: query
          description: Exact filter for tenant id
          required: false
          schema:
            type: string
        - name: filters.mappingType
          in: query
          description: Exact filter for mapping type
          required: false
          schema:
            type: string
        - name: filters.fireflyValue
          in: query
          description: Exact filter for firefly value
          required: false
          schema:
            type: string
        - name: filters.providerValue
          in: query
          description: Exact filter for provider value
          required: false
          schema:
            type: string
        - name: filters.direction
          in: query
          description: Exact filter for direction
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.priority
          in: query
          description: Exact filter for priority
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[priority].from
          in: query
          description: Filter priority from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[priority].to
          in: query
          description: Filter priority to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.metadata
          in: query
          description: Exact filter for metadata
          required: false
          schema:
            type: string
        - name: filters.active
          in: query
          description: Exact filter for active
          required: false
          schema:
            type: boolean
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseProviderValueMappingDTO'
  /api/v1/provider-types:
    post:
      tags:
        - Provider Types
      summary: Create a new provider type
      description: Creates a new provider type and returns it
      operationId: createProviderType
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderTypeDTO'
        required: true
      responses:
        '201':
          description: Provider type created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTypeDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTypeDTO'
  /api/v1/provider-types/filter:
    post:
      tags:
        - Provider Types
      summary: Filter provider types
      description: Returns a filtered list of provider types based on criteria
      operationId: filterProviderTypes
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.code
          in: query
          description: Exact filter for code
          required: false
          schema:
            type: string
        - name: filters.name
          in: query
          description: Exact filter for name
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.active
          in: query
          description: Exact filter for active
          required: false
          schema:
            type: boolean
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseProviderTypeDTO'
  /api/v1/provider-tenants:
    post:
      tags:
        - Provider-Tenant Relationships
      summary: Create a new provider-tenant relationship
      description: Creates a new provider-tenant relationship and returns it
      operationId: createProviderTenant
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderTenantDTO'
        required: true
      responses:
        '201':
          description: Provider-tenant relationship created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderTenantDTO'
  /api/v1/provider-tenants/filter:
    post:
      tags:
        - Provider-Tenant Relationships
      summary: Search and filter provider-tenant relationships
      description: Performs advanced filtering and pagination of provider-tenant relationships. Supports filtering by tenant, provider, relationship type (STANDARD, PREMIUM, TRIAL), enabled status, billing model, and date ranges. Results include usage metrics for monitoring provider performance per tenant. Useful for tenant management dashboards, billing reports, and provider usage analysis.
      operationId: filterProviderTenants
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.providerId
          in: query
          description: Exact filter for provider id
          required: false
          schema:
            type: string
        - name: filters.tenantId
          in: query
          description: Exact filter for tenant id
          required: false
          schema:
            type: string
        - name: filters.isPrimary
          in: query
          description: Exact filter for is primary
          required: false
          schema:
            type: boolean
        - name: filters.priority
          in: query
          description: Exact filter for priority
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[priority].from
          in: query
          description: Filter priority from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[priority].to
          in: query
          description: Filter priority to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.relationshipType
          in: query
          description: Exact filter for relationship type
          required: false
          schema:
            type: string
        - name: filters.configurationOverride
          in: query
          description: Exact filter for configuration override
          required: false
          schema:
            type: string
        - name: filters.enabled
          in: query
          description: Exact filter for enabled
          required: false
          schema:
            type: boolean
        - name: filters.startDate
          in: query
          description: Exact filter for start date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[startDate].from
          in: query
          description: Filter start date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[startDate].to
          in: query
          description: Filter start date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.endDate
          in: query
          description: Exact filter for end date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[endDate].from
          in: query
          description: Filter end date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[endDate].to
          in: query
          description: Filter end date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.notes
          in: query
          description: Exact filter for notes
          required: false
          schema:
            type: string
        - name: filters.billingModel
          in: query
          description: Exact filter for billing model
          required: false
          schema:
            type: string
        - name: filters.monthlyTransactionLimit
          in: query
          description: Exact filter for monthly transaction limit
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[monthlyTransactionLimit].from
          in: query
          description: Filter monthly transaction limit from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[monthlyTransactionLimit].to
          in: query
          description: Filter monthly transaction limit to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.costPerTransaction
          in: query
          description: Exact filter for cost per transaction
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[costPerTransaction].from
          in: query
          description: Filter cost per transaction from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[costPerTransaction].to
          in: query
          description: Filter cost per transaction to value
          required: false
          schema:
            type: string
        - name: filters.monthlyFee
          in: query
          description: Exact filter for monthly fee
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[monthlyFee].from
          in: query
          description: Filter monthly fee from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[monthlyFee].to
          in: query
          description: Filter monthly fee to value
          required: false
          schema:
            type: string
        - name: filters.minimumMonthlyCommitment
          in: query
          description: Exact filter for minimum monthly commitment
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[minimumMonthlyCommitment].from
          in: query
          description: Filter minimum monthly commitment from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[minimumMonthlyCommitment].to
          in: query
          description: Filter minimum monthly commitment to value
          required: false
          schema:
            type: string
        - name: filters.monthlyVolumeLimit
          in: query
          description: Exact filter for monthly volume limit
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[monthlyVolumeLimit].from
          in: query
          description: Filter monthly volume limit from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[monthlyVolumeLimit].to
          in: query
          description: Filter monthly volume limit to value
          required: false
          schema:
            type: string
        - name: filters.setupFee
          in: query
          description: Exact filter for setup fee
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[setupFee].from
          in: query
          description: Filter setup fee from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[setupFee].to
          in: query
          description: Filter setup fee to value
          required: false
          schema:
            type: string
        - name: filters.billingCurrencyCode
          in: query
          description: Exact filter for billing currency code
          required: false
          schema:
            type: string
        - name: filters.currencyCode
          in: query
          description: Exact filter for currency code
          required: false
          schema:
            type: string
        - name: filters.autoFailoverEnabled
          in: query
          description: Exact filter for auto failover enabled
          required: false
          schema:
            type: boolean
        - name: filters.fallbackProviderId
          in: query
          description: Exact filter for fallback provider id
          required: false
          schema:
            type: string
        - name: filters.maxConsecutiveFailures
          in: query
          description: Exact filter for max consecutive failures
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[maxConsecutiveFailures].from
          in: query
          description: Filter max consecutive failures from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[maxConsecutiveFailures].to
          in: query
          description: Filter max consecutive failures to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.circuitBreakerEnabled
          in: query
          description: Exact filter for circuit breaker enabled
          required: false
          schema:
            type: boolean
        - name: filters.circuitBreakerThreshold
          in: query
          description: Exact filter for circuit breaker threshold
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[circuitBreakerThreshold].from
          in: query
          description: Filter circuit breaker threshold from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[circuitBreakerThreshold].to
          in: query
          description: Filter circuit breaker threshold to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.circuitBreakerTimeoutSeconds
          in: query
          description: Exact filter for circuit breaker timeout seconds
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[circuitBreakerTimeoutSeconds].from
          in: query
          description: Filter circuit breaker timeout seconds from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[circuitBreakerTimeoutSeconds].to
          in: query
          description: Filter circuit breaker timeout seconds to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.healthCheckIntervalSeconds
          in: query
          description: Exact filter for health check interval seconds
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[healthCheckIntervalSeconds].from
          in: query
          description: Filter health check interval seconds from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[healthCheckIntervalSeconds].to
          in: query
          description: Filter health check interval seconds to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.lastUsedAt
          in: query
          description: Exact filter for last used at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lastUsedAt].from
          in: query
          description: Filter last used at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lastUsedAt].to
          in: query
          description: Filter last used at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.totalRequestsCount
          in: query
          description: Exact filter for total requests count
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[totalRequestsCount].from
          in: query
          description: Filter total requests count from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[totalRequestsCount].to
          in: query
          description: Filter total requests count to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.totalFailuresCount
          in: query
          description: Exact filter for total failures count
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[totalFailuresCount].from
          in: query
          description: Filter total failures count from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[totalFailuresCount].to
          in: query
          description: Filter total failures count to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.averageResponseTimeMs
          in: query
          description: Exact filter for average response time ms
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[averageResponseTimeMs].from
          in: query
          description: Filter average response time ms from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[averageResponseTimeMs].to
          in: query
          description: Filter average response time ms to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.approvedByUserId
          in: query
          description: Exact filter for approved by user id
          required: false
          schema:
            type: string
        - name: filters.approvedAt
          in: query
          description: Exact filter for approved at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[approvedAt].from
          in: query
          description: Filter approved at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[approvedAt].to
          in: query
          description: Filter approved at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.approvalNotes
          in: query
          description: Exact filter for approval notes
          required: false
          schema:
            type: string
        - name: filters.metadata
          in: query
          description: Exact filter for metadata
          required: false
          schema:
            type: string
        - name: filters.active
          in: query
          description: Exact filter for active
          required: false
          schema:
            type: boolean
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Filtered provider-tenant relationships successfully retrieved with pagination metadata
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseProviderTenantDTO'
        '400':
          description: Invalid filter criteria - Check filter syntax and field names
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseProviderTenantDTO'
  /api/v1/provider-statuses:
    post:
      tags:
        - Provider Statuses
      summary: Create a new provider status
      description: Creates a new provider status and returns it
      operationId: createProviderStatus
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderStatusDTO'
        required: true
      responses:
        '201':
          description: Provider status created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderStatusDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderStatusDTO'
  /api/v1/provider-statuses/filter:
    post:
      tags:
        - Provider Statuses
      summary: Filter provider statuses
      description: Returns a filtered list of provider statuses based on criteria
      operationId: filterProviderStatuses
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.code
          in: query
          description: Exact filter for code
          required: false
          schema:
            type: string
        - name: filters.name
          in: query
          description: Exact filter for name
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.active
          in: query
          description: Exact filter for active
          required: false
          schema:
            type: boolean
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseProviderStatusDTO'
  /api/v1/provider-parameters:
    post:
      tags:
        - Provider Parameters
      summary: Create a new provider parameter
      operationId: createProviderParameter
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderParameterDTO'
        required: true
      responses:
        '201':
          description: Provider parameter created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderParameterDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProviderParameterDTO'
  /api/v1/provider-parameters/filter:
    post:
      tags:
        - Provider Parameters
      summary: Filter provider parameters
      operationId: filterProviderParameters
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.providerId
          in: query
          description: Exact filter for provider id
          required: false
          schema:
            type: string
        - name: filters.tenantId
          in: query
          description: Exact filter for tenant id
          required: false
          schema:
            type: string
        - name: filters.parameterName
          in: query
          description: Exact filter for parameter name
          required: false
          schema:
            type: string
        - name: filters.parameterValue
          in: query
          description: Exact filter for parameter value
          required: false
          schema:
            type: string
        - name: filters.parameterType
          in: query
          description: Exact filter for parameter type
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.isSecret
          in: query
          description: Exact filter for is secret
          required: false
          schema:
            type: boolean
        - name: filters.isRequired
          in: query
          description: Exact filter for is required
          required: false
          schema:
            type: boolean
        - name: filters.isEditable
          in: query
          description: Exact filter for is editable
          required: false
          schema:
            type: boolean
        - name: filters.validationRegex
          in: query
          description: Exact filter for validation regex
          required: false
          schema:
            type: string
        - name: filters.defaultValue
          in: query
          description: Exact filter for default value
          required: false
          schema:
            type: string
        - name: filters.environment
          in: query
          description: Exact filter for environment
          required: false
          schema:
            type: string
        - name: filters.category
          in: query
          description: Exact filter for category
          required: false
          schema:
            type: string
        - name: filters.displayOrder
          in: query
          description: Exact filter for display order
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[displayOrder].from
          in: query
          description: Filter display order from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[displayOrder].to
          in: query
          description: Filter display order to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.metadata
          in: query
          description: Exact filter for metadata
          required: false
          schema:
            type: string
        - name: filters.active
          in: query
          description: Exact filter for active
          required: false
          schema:
            type: boolean
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseProviderParameterDTO'
  /api/v1/feature-flags:
    post:
      tags:
        - Feature Flags
      summary: Create a new feature flag
      operationId: createFeatureFlag
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlagDTO'
        required: true
      responses:
        '201':
          description: Feature flag created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FeatureFlagDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FeatureFlagDTO'
  /api/v1/feature-flags/filter:
    post:
      tags:
        - Feature Flags
      summary: Filter feature flags
      operationId: filterFeatureFlags
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.tenantId
          in: query
          description: Exact filter for tenant id
          required: false
          schema:
            type: string
        - name: filters.featureKey
          in: query
          description: Exact filter for feature key
          required: false
          schema:
            type: string
        - name: filters.featureName
          in: query
          description: Exact filter for feature name
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.enabled
          in: query
          description: Exact filter for enabled
          required: false
          schema:
            type: boolean
        - name: filters.environment
          in: query
          description: Exact filter for environment
          required: false
          schema:
            type: string
        - name: filters.rolloutPercentage
          in: query
          description: Exact filter for rollout percentage
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[rolloutPercentage].from
          in: query
          description: Filter rollout percentage from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[rolloutPercentage].to
          in: query
          description: Filter rollout percentage to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.startDate
          in: query
          description: Exact filter for start date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[startDate].from
          in: query
          description: Filter start date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[startDate].to
          in: query
          description: Filter start date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.endDate
          in: query
          description: Exact filter for end date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[endDate].from
          in: query
          description: Filter end date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[endDate].to
          in: query
          description: Filter end date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.targetUserSegments
          in: query
          description: Exact filter for target user segments
          required: false
          schema:
            type: string
        - name: filters.metadata
          in: query
          description: Exact filter for metadata
          required: false
          schema:
            type: string
        - name: filters.active
          in: query
          description: Exact filter for active
          required: false
          schema:
            type: boolean
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseFeatureFlagDTO'
  /api/v1/environment-configs:
    post:
      tags:
        - Environment Configurations
      summary: Create a new environment configuration
      operationId: createEnvironmentConfig
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentConfigDTO'
        required: true
      responses:
        '201':
          description: Environment configuration created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvironmentConfigDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvironmentConfigDTO'
  /api/v1/environment-configs/filter:
    post:
      tags:
        - Environment Configurations
      summary: Filter environment configurations
      operationId: filterEnvironmentConfigs
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.tenantId
          in: query
          description: Exact filter for tenant id
          required: false
          schema:
            type: string
        - name: filters.environmentName
          in: query
          description: Exact filter for environment name
          required: false
          schema:
            type: string
        - name: filters.configKey
          in: query
          description: Exact filter for config key
          required: false
          schema:
            type: string
        - name: filters.configValue
          in: query
          description: Exact filter for config value
          required: false
          schema:
            type: string
        - name: filters.configType
          in: query
          description: Exact filter for config type
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.isSecret
          in: query
          description: Exact filter for is secret
          required: false
          schema:
            type: boolean
        - name: filters.category
          in: query
          description: Exact filter for category
          required: false
          schema:
            type: string
        - name: filters.metadata
          in: query
          description: Exact filter for metadata
          required: false
          schema:
            type: string
        - name: filters.active
          in: query
          description: Exact filter for active
          required: false
          schema:
            type: boolean
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseEnvironmentConfigDTO'
  /api/v1/configuration-audits:
    post:
      tags:
        - Configuration Audits
      summary: Create a new configuration audit entry
      description: Audit entries are immutable and cannot be updated or deleted once created
      operationId: createConfigurationAudit
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationAuditDTO'
        required: true
      responses:
        '201':
          description: Configuration audit created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationAuditDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationAuditDTO'
  /api/v1/configuration-audits/filter:
    post:
      tags:
        - Configuration Audits
      summary: Filter configuration audits
      operationId: filterConfigurationAudits
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.tenantId
          in: query
          description: Exact filter for tenant id
          required: false
          schema:
            type: string
        - name: filters.entityType
          in: query
          description: Exact filter for entity type
          required: false
          schema:
            type: string
        - name: filters.action
          in: query
          description: Exact filter for action
          required: false
          schema:
            type: string
        - name: filters.fieldName
          in: query
          description: Exact filter for field name
          required: false
          schema:
            type: string
        - name: filters.oldValue
          in: query
          description: Exact filter for old value
          required: false
          schema:
            type: string
        - name: filters.newValue
          in: query
          description: Exact filter for new value
          required: false
          schema:
            type: string
        - name: filters.changedByUserId
          in: query
          description: Exact filter for changed by user id
          required: false
          schema:
            type: string
        - name: filters.changedByUsername
          in: query
          description: Exact filter for changed by username
          required: false
          schema:
            type: string
        - name: filters.changeReason
          in: query
          description: Exact filter for change reason
          required: false
          schema:
            type: string
        - name: filters.ipAddress
          in: query
          description: Exact filter for ip address
          required: false
          schema:
            type: string
        - name: filters.userAgent
          in: query
          description: Exact filter for user agent
          required: false
          schema:
            type: string
        - name: filters.sourceSystem
          in: query
          description: Exact filter for source system
          required: false
          schema:
            type: string
        - name: filters.changeCategory
          in: query
          description: Exact filter for change category
          required: false
          schema:
            type: string
        - name: filters.changeSeverity
          in: query
          description: Exact filter for change severity
          required: false
          schema:
            type: string
        - name: filters.impactScope
          in: query
          description: Exact filter for impact scope
          required: false
          schema:
            type: string
        - name: filters.requiresApproval
          in: query
          description: Exact filter for requires approval
          required: false
          schema:
            type: boolean
        - name: filters.approvedByUserId
          in: query
          description: Exact filter for approved by user id
          required: false
          schema:
            type: string
        - name: filters.approvedAt
          in: query
          description: Exact filter for approved at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[approvedAt].from
          in: query
          description: Filter approved at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[approvedAt].to
          in: query
          description: Filter approved at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.approvalNotes
          in: query
          description: Exact filter for approval notes
          required: false
          schema:
            type: string
        - name: filters.rollbackAvailable
          in: query
          description: Exact filter for rollback available
          required: false
          schema:
            type: boolean
        - name: filters.rolledBack
          in: query
          description: Exact filter for rolled back
          required: false
          schema:
            type: boolean
        - name: filters.rolledBackByUserId
          in: query
          description: Exact filter for rolled back by user id
          required: false
          schema:
            type: string
        - name: filters.rolledBackAt
          in: query
          description: Exact filter for rolled back at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[rolledBackAt].from
          in: query
          description: Filter rolled back at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[rolledBackAt].to
          in: query
          description: Filter rolled back at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.rollbackReason
          in: query
          description: Exact filter for rollback reason
          required: false
          schema:
            type: string
        - name: filters.metadata
          in: query
          description: Exact filter for metadata
          required: false
          schema:
            type: string
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseConfigurationAuditDTO'
  /api/v1/channel-configs:
    post:
      tags:
        - Channel Configuration
      summary: Create a new channel config
      description: Create a new channel configuration for a tenant
      operationId: createChannelConfig
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelConfigDTO'
        required: true
      responses:
        '201':
          description: Channel config created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelConfigDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelConfigDTO'
  /api/v1/channel-configs/filter:
    post:
      tags:
        - Channel Configuration
      summary: Filter channel configs
      description: Filter channel configurations based on criteria with pagination
      operationId: filterChannelConfigs
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestChannelConfigDTO'
        required: true
      responses:
        '200':
          description: Channel configs filtered successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseChannelConfigDTO'
  /api/v1/channel-config-parameters:
    post:
      tags:
        - Channel Config Parameters
      summary: Create channel config parameter
      description: Creates a new channel config parameter
      operationId: create
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelConfigParameterDTO'
        required: true
      responses:
        '201':
          description: Channel config parameter created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelConfigParameterDTO'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelConfigParameterDTO'
  /api/v1/channel-config-parameters/filter:
    post:
      tags:
        - Channel Config Parameters
      summary: Filter channel config parameters
      description: Filters channel config parameters with pagination
      operationId: filter
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestChannelConfigParameterDTO'
        required: true
      responses:
        '200':
          description: Channel config parameters filtered successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
  /api/v1/tenant-brandings/tenant/{tenantId}:
    get:
      tags:
        - Tenant Brandings
      summary: Get tenant branding by tenant ID
      operationId: getTenantBrandingByTenantId
      parameters:
        - name: tenantId
          in: path
          description: ID of the tenant
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantBrandingDTO'
        '404':
          description: Tenant branding not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantBrandingDTO'
  /api/v1/configuration-audits/{id}:
    get:
      tags:
        - Configuration Audits
      summary: Get configuration audit by ID
      operationId: getConfigurationAuditById
      parameters:
        - name: id
          in: path
          description: ID of the configuration audit to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationAuditDTO'
        '404':
          description: Configuration audit not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationAuditDTO'
components:
  schemas:
    WebhookConfigDTO:
      required:
        - webhookName
        - webhookUrl
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the webhook configuration
          format: uuid
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426614174000
        tenantId:
          type: string
          description: Reference to tenant owning this webhook
          format: uuid
        providerId:
          type: string
          description: Reference to provider if webhook is provider-specific
          format: uuid
        webhookName:
          maxLength: 100
          minLength: 2
          type: string
          description: Descriptive name for the webhook
          example: Payment Notification Webhook
        webhookUrl:
          pattern: ^https?://.*
          type: string
          description: Target URL for webhook delivery
          example: https://api.example.com/webhooks/payments
        description:
          type: string
          description: Detailed description of webhook purpose and usage
          example: Sends notifications for all payment-related events
        eventTypes:
          type: string
          description: Comma-separated list of event types to trigger this webhook
          example: payment.created,payment.completed,payment.failed
        httpMethod:
          type: string
          description: HTTP method for webhook delivery
          example: POST
        contentType:
          type: string
          description: Content-Type header for webhook requests
          example: application/json
        webhookVersion:
          type: string
          description: Webhook protocol version
          example: '1.0'
        authType:
          type: string
          description: 'Authentication type: NONE, BASIC, BEARER, API_KEY, HMAC, OAUTH2'
          example: HMAC
        authHeaderName:
          type: string
          description: Authentication header name
          example: Authorization
        authHeaderValue:
          type: string
          description: Authentication header value (encrypted at rest)
          example: Bearer sk_live_...
        secretKey:
          type: string
          description: Secret key for HMAC signature generation (encrypted at rest)
        signatureAlgorithm:
          type: string
          description: 'Signature algorithm: HMAC-SHA256, HMAC-SHA512, RSA-SHA256'
          example: HMAC-SHA256
        signatureHeaderName:
          type: string
          description: HTTP header name for signature
          example: X-Webhook-Signature
        verifySsl:
          type: boolean
          description: Indicates if SSL certificate verification is enabled
          example: true
        followRedirects:
          type: boolean
          description: Indicates if HTTP redirects should be followed
          example: true
        customHeaders:
          type: string
          description: Custom HTTP headers in JSON format
          example: '{"X-Custom-Header":"value"}'
        timeoutSeconds:
          minimum: 1
          type: integer
          description: Request timeout in seconds
          format: int32
          example: 30
        retryEnabled:
          type: boolean
          description: Indicates if retry mechanism is enabled on failure
          example: true
        maxRetryAttempts:
          minimum: 0
          type: integer
          description: Maximum number of retry attempts
          format: int32
          example: 3
        retryDelaySeconds:
          minimum: 1
          type: integer
          description: Initial retry delay in seconds
          format: int32
          example: 60
        retryBackoffMultiplier:
          minimum: 1
          type: number
          description: Exponential backoff multiplier for retries
          format: double
          example: 2
        maxRetryDelaySeconds:
          type: integer
          description: Maximum retry delay in seconds (caps exponential backoff)
          format: int32
          example: 3600
        batchEvents:
          type: boolean
          description: Indicates if events should be batched before delivery
          example: false
        batchSize:
          type: integer
          description: Maximum number of events per batch
          format: int32
          example: 100
        batchWindowSeconds:
          type: integer
          description: Maximum time in seconds to wait before sending partial batch
          format: int32
          example: 60
        batchTimeoutSeconds:
          type: integer
          description: Timeout in seconds for batch processing
          format: int32
          example: 300
        deadLetterQueueEnabled:
          type: boolean
          description: Indicates if failed events are sent to dead letter queue
          example: true
        maxDeadLetterRetries:
          type: integer
          description: Maximum number of retries for dead letter queue processing
          format: int32
          example: 5
        asyncProcessing:
          type: boolean
          description: Indicates if webhook processing is asynchronous
          example: true
        priority:
          type: string
          description: 'Priority level for webhook delivery: LOW, NORMAL, HIGH, CRITICAL'
          example: NORMAL
        circuitBreakerEnabled:
          type: boolean
          description: Indicates if circuit breaker pattern is enabled
          example: true
        circuitBreakerThreshold:
          type: integer
          description: Failure threshold percentage to open circuit breaker
          format: int32
          example: 50
        circuitBreakerTimeoutSeconds:
          type: integer
          description: Timeout in seconds before attempting to close circuit breaker
          format: int32
          example: 300
        lastTriggeredAt:
          type: string
          description: Timestamp of last webhook trigger
          format: date-time
          readOnly: true
        totalTriggersCount:
          type: integer
          description: Total number of times webhook was triggered
          format: int64
          readOnly: true
          example: 1523
        totalSuccessCount:
          type: integer
          description: Total number of successful deliveries
          format: int64
          readOnly: true
          example: 1498
        totalFailureCount:
          type: integer
          description: Total number of failed deliveries
          format: int64
          readOnly: true
          example: 25
        averageResponseTimeMs:
          type: integer
          description: Average response time in milliseconds
          format: int32
          readOnly: true
          example: 245
        lastSuccessAt:
          type: string
          description: Timestamp of last successful delivery
          format: date-time
          readOnly: true
        lastFailureAt:
          type: string
          description: Timestamp of last failed delivery
          format: date-time
          readOnly: true
        lastFailureReason:
          type: string
          description: Last failure reason or error message
          readOnly: true
        healthStatus:
          type: string
          description: 'Current health status: HEALTHY, DEGRADED, DOWN, UNKNOWN'
          readOnly: true
          example: HEALTHY
        consecutiveFailureCount:
          type: integer
          description: Consecutive failure count (resets on success)
          format: int32
          readOnly: true
          example: 0
        healthCheckEnabled:
          type: boolean
          description: Indicates if health check monitoring is enabled
          example: true
        healthCheckIntervalSeconds:
          type: integer
          description: Health check interval in seconds
          format: int32
          example: 300
        enabled:
          type: boolean
          description: Indicates if the webhook is enabled for event delivery
          example: true
        metadata:
          type: string
          description: Additional metadata in JSON format for extensibility
          example: '{"custom_field":"value"}'
        active:
          type: boolean
          description: Indicates if the webhook configuration is active
          example: true
        version:
          type: integer
          description: Version number for optimistic locking
          format: int64
          readOnly: true
        createdAt:
          type: string
          description: Timestamp when webhook was created
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Timestamp when webhook was last updated
          format: date-time
          readOnly: true
      description: Webhook configuration for event-driven notifications. Defines how Firefly sends real-time event notifications to external systems via HTTP callbacks.
    ProviderTenantDTO:
      required:
        - providerId
        - tenantId
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the provider-tenant relationship
          format: uuid
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426614174000
        providerId:
          type: string
          description: Reference to the provider in this relationship
          format: uuid
        tenantId:
          type: string
          description: Reference to the tenant in this relationship
          format: uuid
        isPrimary:
          type: boolean
          description: Indicates if this is the primary provider for the tenant's operations
          example: true
        priority:
          type: integer
          description: Priority for provider selection (higher = preferred). Used for load balancing and failover
          format: int32
          example: 10
        relationshipType:
          type: string
          description: 'Type of relationship: STANDARD, PREMIUM, TRIAL, CUSTOM'
          example: PREMIUM
        configurationOverride:
          type: string
          description: Tenant-specific configuration overrides in JSON format
          example: '{"api_key":"tenant_specific_key","timeout":5000}'
        enabled:
          type: boolean
          description: Indicates if this provider is enabled for the tenant
          example: true
        startDate:
          type: string
          description: Relationship start date and time
          format: date-time
        endDate:
          type: string
          description: Relationship end date and time (null for indefinite)
          format: date-time
        notes:
          type: string
          description: Notes about this provider-tenant relationship
          example: Special configuration for US market compliance
        billingModel:
          type: string
          description: 'Billing model: TRANSACTION_BASED, VOLUME_BASED, FLAT_FEE, HYBRID'
          example: TRANSACTION_BASED
        monthlyTransactionLimit:
          type: integer
          description: Maximum transactions allowed per month (null for unlimited)
          format: int32
          example: 100000
        costPerTransaction:
          type: number
          description: Cost per transaction in billing currency
          example: 0.05
        monthlyFee:
          type: number
          description: Fixed monthly fee in billing currency
          example: 499.99
        minimumMonthlyCommitment:
          type: number
          description: Minimum monthly commitment in billing currency
          example: 1000
        monthlyVolumeLimit:
          type: number
          description: Monthly volume limit in billing currency (null for unlimited)
          example: 50000
        setupFee:
          type: number
          description: One-time setup fee in billing currency
          example: 250
        billingCurrencyCode:
          type: string
          description: ISO 4217 currency code for billing
          example: USD
        currencyCode:
          type: string
          description: Alternative currency code field (deprecated, use billingCurrencyCode)
          example: USD
        autoFailoverEnabled:
          type: boolean
          description: Indicates if automatic failover is enabled on provider failure
          example: true
        fallbackProviderId:
          type: string
          description: Reference to fallback provider if this provider fails
          format: uuid
        maxConsecutiveFailures:
          type: integer
          description: Maximum consecutive failures before triggering failover
          format: int32
          example: 3
        circuitBreakerEnabled:
          type: boolean
          description: Indicates if circuit breaker pattern is enabled
          example: true
        circuitBreakerThreshold:
          type: integer
          description: Threshold for opening circuit breaker (failure percentage)
          format: int32
          example: 50
        circuitBreakerTimeoutSeconds:
          type: integer
          description: Timeout in seconds before attempting to close circuit breaker
          format: int32
          example: 60
        healthCheckIntervalSeconds:
          type: integer
          description: Health check interval in seconds for this provider-tenant relationship
          format: int32
          example: 300
        lastUsedAt:
          type: string
          description: Timestamp of last successful use of this provider
          format: date-time
          readOnly: true
        totalRequestsCount:
          type: integer
          description: Total number of requests made to this provider
          format: int64
          readOnly: true
          example: 15234
        totalFailuresCount:
          type: integer
          description: Total number of failed requests
          format: int64
          readOnly: true
          example: 42
        averageResponseTimeMs:
          type: integer
          description: Average response time in milliseconds
          format: int32
          readOnly: true
          example: 245
        approvedByUserId:
          type: string
          description: Reference to user who approved this provider-tenant relationship
          format: uuid
        approvedAt:
          type: string
          description: Timestamp when relationship was approved
          format: date-time
          readOnly: true
        approvalNotes:
          type: string
          description: Approval notes or justification
          example: Approved for Q1 2024 payment processing
        metadata:
          type: string
          description: Additional metadata in JSON format for extensibility
          example: '{"custom_field":"value"}'
        active:
          type: boolean
          description: Indicates if the relationship is active
          example: true
        version:
          type: integer
          description: Version number for optimistic locking
          format: int64
          readOnly: true
        createdAt:
          type: string
          description: Timestamp when relationship was created
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Timestamp when relationship was last updated
          format: date-time
          readOnly: true
      description: Provider-Tenant relationship configuration. Defines how a specific provider is configured and used by a tenant, including billing, failover, and usage tracking.
    TenantDTO:
      required:
        - code
        - name
        - tenantStatusId
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the tenant
          format: uuid
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426614174000
        code:
          maxLength: 50
          minLength: 2
          type: string
          description: Unique tenant code for programmatic identification
          example: acme-bank
        name:
          maxLength: 100
          minLength: 2
          type: string
          description: Display name of the tenant
          example: Acme Bank
        description:
          type: string
          description: Detailed description of the tenant and its purpose
          example: Acme Bank's production configuration
        tenantStatusId:
          type: string
          description: Reference to tenant status (ACTIVE, SUSPENDED, INACTIVE, TRIAL, EXPIRED)
          format: uuid
        countryId:
          type: string
          description: Reference to primary operating country for regional settings and compliance
          format: uuid
        timezone:
          type: string
          description: IANA timezone identifier for scheduling and time-sensitive operations
          example: America/New_York
        defaultCurrencyCode:
          maxLength: 3
          minLength: 0
          type: string
          description: Default ISO 4217 currency code for tenant operations
          example: USD
        defaultLanguageCode:
          maxLength: 10
          minLength: 0
          type: string
          description: Default ISO 639-1 language code for tenant UI and communications
          example: en
        legalEntityName:
          type: string
          description: Official legal name of the organization using this tenant
          example: Acme Bank Corporation
        taxIdentificationNumber:
          type: string
          description: Tax identification number (TIN/EIN) for the organization
          example: 12-3456789
        registrationNumber:
          type: string
          description: Business registration number from government authority
          example: REG-123456
        incorporationDate:
          type: string
          description: Date when the organization was incorporated
          format: date
          example: '2020-01-15'
        regulatoryLicenseNumber:
          type: string
          description: Banking or financial services license number
          example: BNK-LIC-789
        regulatoryAuthority:
          type: string
          description: Name of regulatory authority overseeing this tenant
          example: Federal Reserve
        businessContactName:
          type: string
          description: Business contact person name
          example: John Doe
        businessContactEmail:
          type: string
          description: Business contact email address
          example: business@acmebank.com
        businessContactPhone:
          type: string
          description: Business contact phone number
          example: +1-555-0100
        technicalContactName:
          type: string
          description: Technical contact person name
          example: Jane Smith
        technicalContactEmail:
          type: string
          description: Technical contact email address
          example: tech@acmebank.com
        technicalContactPhone:
          type: string
          description: Technical contact phone number
          example: +1-555-0101
        parentTenantId:
          type: string
          description: Reference to parent tenant for hierarchical structures (e.g., main org -> departments)
          format: uuid
        tenantType:
          type: string
          description: 'Type of tenant: STANDARD, ENTERPRISE, PARTNER, SUBSIDIARY, INTERNAL, DEMO'
          example: ENTERPRISE
        industrySector:
          type: string
          description: Industry sector the tenant operates in
          example: RETAIL_BANKING
        employeeCountRange:
          type: string
          description: Expected user/customer capacity range for resource planning
          example: 1001-10000
        annualRevenueRange:
          type: string
          description: Expected transaction volume range for capacity planning
          example: HIGH
        riskRating:
          type: string
          description: 'Risk rating: LOW, MEDIUM, HIGH, CRITICAL'
          example: MEDIUM
        complianceTier:
          type: string
          description: Compliance tier for regulatory requirements
          example: TIER_1
        dataClassification:
          type: string
          description: 'Data classification level: PUBLIC, INTERNAL, CONFIDENTIAL, RESTRICTED'
          example: CONFIDENTIAL
        slaTier:
          type: string
          description: Service Level Agreement tier
          example: GOLD
        subscriptionTier:
          type: string
          description: Subscription tier level
          example: ENTERPRISE
        subscriptionStartDate:
          type: string
          description: Subscription start date and time
          format: date-time
        subscriptionEndDate:
          type: string
          description: Subscription end date and time
          format: date-time
        isTrial:
          type: boolean
          description: Indicates if tenant is in trial mode
          example: false
        trialEndDate:
          type: string
          description: Trial period end date and time
          format: date-time
        billingCurrencyCode:
          maxLength: 3
          minLength: 0
          type: string
          description: ISO 4217 currency code for billing
          example: USD
        billingCycle:
          type: string
          description: 'Billing cycle: MONTHLY, QUARTERLY, ANNUALLY'
          example: MONTHLY
        paymentTermsDays:
          type: integer
          description: Payment terms in days
          format: int32
          example: 30
        metadata:
          type: string
          description: Additional metadata in JSON format for extensibility
          example: '{"custom_field":"value"}'
        active:
          type: boolean
          description: Indicates if the tenant is active
          example: true
        version:
          type: integer
          description: Version number for optimistic locking
          format: int64
          readOnly: true
        createdAt:
          type: string
          description: Timestamp when tenant was created
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Timestamp when tenant was last updated
          format: date-time
          readOnly: true
      description: Tenant (logical separation) in the Firefly core banking system. Each tenant has independent configuration, providers, branding, and operational settings.
    TenantStatusDTO:
      required:
        - code
        - name
      type: object
      properties:
        id:
          type: string
          description: Tenant status ID
          format: uuid
          readOnly: true
        code:
          maxLength: 50
          minLength: 2
          type: string
          description: Unique code for the tenant status
          example: ACTIVE
        name:
          maxLength: 100
          minLength: 2
          type: string
          description: Name of the tenant status
          example: Active
        description:
          type: string
          description: Description of the tenant status
          example: Tenant is active and operational
        active:
          type: boolean
          description: Whether the tenant status is active
          default: true
        version:
          type: integer
          description: Version for optimistic locking
          format: int64
          readOnly: true
        createdAt:
          type: string
          description: Creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Last update timestamp
          format: date-time
          readOnly: true
      description: Tenant Status information
    TenantSettingsDTO:
      required:
        - tenantId
      type: object
      properties:
        id:
          type: string
          description: Settings ID
          format: uuid
          readOnly: true
        tenantId:
          type: string
          description: Tenant ID
          format: uuid
        apiRateLimitPerMinute:
          minimum: 0
          type: integer
          description: API rate limit per minute
          format: int32
          example: 100
        apiRateLimitPerHour:
          minimum: 0
          type: integer
          description: API rate limit per hour
          format: int32
          example: 5000
        apiRateLimitPerDay:
          minimum: 0
          type: integer
          description: API rate limit per day
          format: int32
          example: 100000
        passwordMinLength:
          minimum: 6
          type: integer
          description: Minimum password length
          format: int32
          example: 12
        passwordRequireUppercase:
          type: boolean
          description: Require uppercase letters in password
          example: true
        passwordRequireLowercase:
          type: boolean
          description: Require lowercase letters in password
          example: true
        passwordRequireNumbers:
          type: boolean
          description: Require numbers in password
          example: true
        passwordRequireSpecialChars:
          type: boolean
          description: Require special characters in password
          example: true
        passwordExpiryDays:
          minimum: 0
          type: integer
          description: Password expiry in days (0 = never)
          format: int32
          example: 90
        passwordHistoryCount:
          minimum: 0
          type: integer
          description: Number of previous passwords to remember (prevents reuse)
          format: int32
          example: 5
        mfaEnabled:
          type: boolean
          description: Whether MFA is enabled
          example: true
        mfaRequired:
          type: boolean
          description: Whether MFA is required
          example: false
        twoFactorAuthMethods:
          type: string
          description: 'Comma-separated list of allowed 2FA methods: SMS, EMAIL, TOTP, BIOMETRIC'
          example: TOTP,SMS
        sessionTimeoutMinutes:
          minimum: 1
          type: integer
          description: Session timeout in minutes
          format: int32
          example: 30
        sessionIdleTimeoutMinutes:
          minimum: 1
          type: integer
          description: Session idle timeout in minutes before automatic logout
          format: int32
          example: 15
        concurrentSessionsLimit:
          minimum: 1
          type: integer
          description: Maximum number of concurrent sessions allowed per user
          format: int32
          example: 3
        maxLoginAttempts:
          minimum: 1
          type: integer
          description: Maximum login attempts before lockout
          format: int32
          example: 5
        accountLockoutDurationMinutes:
          minimum: 0
          type: integer
          description: Account lockout duration in minutes
          format: int32
          example: 30
        forcePasswordChangeOnFirstLogin:
          type: boolean
          description: Force password change on first login
          example: true
        apiKeyRotationDays:
          minimum: 1
          type: integer
          description: API key rotation interval in days
          format: int32
          example: 90
        encryptionAlgorithm:
          type: string
          description: 'Encryption algorithm used: AES256, RSA2048, etc.'
          example: AES256
        ipWhitelist:
          type: string
          description: Comma-separated list of whitelisted IP addresses or CIDR ranges
          example: 192.168.1.0/24,10.0.0.1
        ipBlacklist:
          type: string
          description: Comma-separated list of blacklisted IP addresses or CIDR ranges
          example: 203.0.113.0/24
        geoBlockingEnabled:
          type: boolean
          description: Whether geographic blocking is enabled
          example: false
        allowedCountries:
          type: string
          description: Comma-separated list of allowed country codes (ISO 3166-1 alpha-2)
          example: US,CA,GB
        blockedCountries:
          type: string
          description: Comma-separated list of blocked country codes (ISO 3166-1 alpha-2)
          example: KP,IR
        gdprEnabled:
          type: boolean
          description: Whether GDPR compliance is enabled
          example: true
        pciDssEnabled:
          type: boolean
          description: Whether PCI-DSS compliance is enabled
          example: true
        soxComplianceEnabled:
          type: boolean
          description: Whether SOX compliance is enabled
          example: false
        hipaaComplianceEnabled:
          type: boolean
          description: Whether HIPAA compliance is enabled
          example: false
        iso27001ComplianceEnabled:
          type: boolean
          description: Whether ISO 27001 compliance is enabled
          example: true
        dataResidencyCountry:
          type: string
          description: Data residency country code (ISO 3166-1 alpha-2)
          example: US
        regulatoryReportingEnabled:
          type: boolean
          description: Whether regulatory reporting is enabled
          example: true
        regulatoryReportingFrequency:
          type: string
          description: 'Regulatory reporting frequency: DAILY, WEEKLY, MONTHLY, QUARTERLY'
          example: MONTHLY
        fraudDetectionEnabled:
          type: boolean
          description: Whether fraud detection is enabled
          example: true
        fraudScoreThreshold:
          minimum: 0
          type: integer
          description: Fraud score threshold (0-100) for flagging transactions
          format: int32
          example: 75
        transactionMonitoringEnabled:
          type: boolean
          description: Whether transaction monitoring is enabled
          example: true
        amlScreeningEnabled:
          type: boolean
          description: Whether AML (Anti-Money Laundering) screening is enabled
          example: true
        sanctionsScreeningEnabled:
          type: boolean
          description: Whether sanctions screening is enabled
          example: true
        kycVerificationRequired:
          type: boolean
          description: Whether KYC (Know Your Customer) verification is required
          example: true
        kycRefreshIntervalDays:
          minimum: 1
          type: integer
          description: KYC refresh interval in days
          format: int32
          example: 365
        documentVerificationRequired:
          type: boolean
          description: Whether document verification is required
          example: true
        biometricVerificationEnabled:
          type: boolean
          description: Whether biometric verification is enabled
          example: false
        circuitBreakerEnabled:
          type: boolean
          description: Whether circuit breaker is enabled
          example: true
        circuitBreakerFailureThreshold:
          minimum: 1
          type: integer
          description: Circuit breaker failure threshold
          format: int32
          example: 5
        circuitBreakerTimeoutSeconds:
          minimum: 1
          type: integer
          description: Circuit breaker timeout in seconds
          format: int32
          example: 30
        circuitBreakerResetTimeoutSeconds:
          minimum: 1
          type: integer
          description: Circuit breaker reset timeout in seconds
          format: int32
          example: 60
        maintenanceModeEnabled:
          type: boolean
          description: Whether maintenance mode is enabled
          example: false
        maintenanceStartTime:
          type: string
          description: Maintenance start time
          format: date-time
        maintenanceEndTime:
          type: string
          description: Maintenance end time
          format: date-time
        maintenanceMessage:
          type: string
          description: Maintenance message to display
          example: System under maintenance
        auditEnabled:
          type: boolean
          description: Whether audit is enabled
          example: true
        auditRetentionDays:
          minimum: 1
          type: integer
          description: Audit retention in days
          format: int32
          example: 365
        logLevel:
          type: string
          description: Log level (DEBUG, INFO, WARN, ERROR)
          example: INFO
        sensitiveDataMaskingEnabled:
          type: boolean
          description: Whether sensitive data masking is enabled
          example: true
        dataRetentionPolicy:
          type: string
          description: Data retention policy description or JSON configuration
          example: STANDARD_7_YEARS
        transactionRetentionDays:
          minimum: 1
          type: integer
          description: Transaction retention in days
          format: int32
          example: 2555
        documentRetentionDays:
          minimum: 1
          type: integer
          description: Document retention in days
          format: int32
          example: 2555
        autoArchiveEnabled:
          type: boolean
          description: Whether auto-archiving is enabled
          example: true
        archiveAfterDays:
          minimum: 1
          type: integer
          description: Number of days after which data is automatically archived
          format: int32
          example: 365
        autoDeleteEnabled:
          type: boolean
          description: Whether auto-deletion is enabled
          example: false
        deleteAfterDays:
          minimum: 1
          type: integer
          description: Number of days after which archived data is automatically deleted
          format: int32
          example: 2555
        backupEnabled:
          type: boolean
          description: Whether backup is enabled
          example: true
        backupFrequencyHours:
          minimum: 1
          type: integer
          description: Backup frequency in hours
          format: int32
          example: 24
        backupRetentionDays:
          minimum: 1
          type: integer
          description: Backup retention in days
          format: int32
          example: 90
        disasterRecoveryEnabled:
          type: boolean
          description: Whether disaster recovery is enabled
          example: true
        pointInTimeRecoveryEnabled:
          type: boolean
          description: Whether point-in-time recovery is enabled
          example: true
        crossRegionReplicationEnabled:
          type: boolean
          description: Whether cross-region replication is enabled
          example: false
        replicationRegions:
          type: string
          description: Comma-separated list of replication regions
          example: us-east-1,eu-west-1
        emailNotificationsEnabled:
          type: boolean
          description: Whether email notifications are enabled
          example: true
        smsNotificationsEnabled:
          type: boolean
          description: Whether SMS notifications are enabled
          example: true
        pushNotificationsEnabled:
          type: boolean
          description: Whether push notifications are enabled
          example: true
        webhookNotificationsEnabled:
          type: boolean
          description: Whether webhook notifications are enabled
          example: true
        metadata:
          type: string
          description: Additional metadata (JSON)
        active:
          type: boolean
          description: Whether the settings are active
          example: true
        version:
          type: integer
          description: Version for optimistic locking
          format: int64
          readOnly: true
        createdAt:
          type: string
          description: Creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Last update timestamp
          format: date-time
          readOnly: true
      description: Operational settings for a tenant
    TenantBrandingDTO:
      required:
        - tenantId
      type: object
      properties:
        id:
          type: string
          description: Tenant branding ID
          format: uuid
          readOnly: true
        tenantId:
          type: string
          description: ID of the tenant
          format: uuid
        logoUrl:
          type: string
          description: URL of the logo
          example: https://example.com/logo.png
        logoDarkUrl:
          type: string
          description: URL of the dark mode logo
          example: https://example.com/logo-dark.png
        faviconUrl:
          type: string
          description: URL of the favicon
          example: https://example.com/favicon.ico
        primaryColor:
          pattern: ^#[0-9A-Fa-f]{6}$
          type: string
          description: Primary brand color in hex format
          example: '#FF5733'
        secondaryColor:
          pattern: ^#[0-9A-Fa-f]{6}$
          type: string
          description: Secondary brand color in hex format
          example: '#33FF57'
        accentColor:
          pattern: ^#[0-9A-Fa-f]{6}$
          type: string
          description: Accent color in hex format
          example: '#3357FF'
        backgroundColor:
          pattern: ^#[0-9A-Fa-f]{6}$
          type: string
          description: Background color in hex format
          example: '#FFFFFF'
        textColor:
          pattern: ^#[0-9A-Fa-f]{6}$
          type: string
          description: Text color in hex format
          example: '#000000'
        fontFamily:
          maxLength: 100
          minLength: 0
          type: string
          description: Font family for the tenant
          example: Roboto, sans-serif
        customCss:
          type: string
          description: Custom CSS for advanced styling
        emailHeaderUrl:
          type: string
          description: URL of the email header image
          example: https://example.com/email-header.png
        emailFooterText:
          type: string
          description: Footer text for emails
          example: © 2025 Company Name. All rights reserved.
        metadata:
          type: string
          description: Additional metadata in JSON format
        active:
          type: boolean
          description: Whether the branding is active
          default: true
        version:
          type: integer
          description: Version for optimistic locking
          format: int64
          readOnly: true
        createdAt:
          type: string
          description: Creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Last update timestamp
          format: date-time
          readOnly: true
      description: Tenant branding and visual configuration
    ProviderDTO:
      required:
        - code
        - name
        - providerStatusId
        - providerTypeId
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the provider
          format: uuid
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426614174000
        code:
          maxLength: 50
          minLength: 2
          type: string
          description: Unique business code for programmatic reference
          example: STRIPE
        name:
          maxLength: 100
          minLength: 2
          type: string
          description: Display name of the provider
          example: Stripe Payment Gateway
        description:
          type: string
          description: Detailed description of the provider and its capabilities
          example: Stripe is a payment processing platform
        providerTypeId:
          type: string
          description: Reference to provider type (PAYMENT_GATEWAY, KYC, CARD_ISSUING, etc.)
          format: uuid
        providerStatusId:
          type: string
          description: Reference to provider status (ACTIVE, INACTIVE, MAINTENANCE, DEPRECATED)
          format: uuid
        baseUrl:
          type: string
          description: Base URL for API endpoints (deprecated - use productionUrl)
          example: https://api.stripe.com
        productionUrl:
          type: string
          description: Production environment API URL
          example: https://api.stripe.com
        sandboxUrl:
          type: string
          description: Sandbox/test environment API URL
          example: https://api.stripe.com/test
        supportsSandbox:
          type: boolean
          description: Indicates if provider supports sandbox environment
          example: true
        apiVersion:
          type: string
          description: API version being used
          example: '2023-10-16'
        documentationUrl:
          type: string
          description: URL to provider's API documentation
          example: https://stripe.com/docs/api
        providerCategory:
          type: string
          description: 'Business category: PAYMENT, COMPLIANCE, INFRASTRUCTURE, etc.'
          example: PAYMENT
        webhookSupport:
          type: boolean
          description: Indicates if provider supports webhooks
          example: true
        batchProcessingSupport:
          type: boolean
          description: Indicates if provider supports batch processing
          example: true
        realTimeProcessingSupport:
          type: boolean
          description: Indicates if provider supports real-time processing
          example: true
        supportedCountries:
          type: string
          description: Comma-separated list of supported country codes (ISO 3166-1 alpha-2)
          example: US,GB,FR,DE
        supportedCurrencies:
          type: string
          description: Comma-separated list of supported currency codes (ISO 4217)
          example: USD,EUR,GBP
        supportedLanguages:
          type: string
          description: Comma-separated list of supported language codes (ISO 639-1)
          example: en,es,fr
        slaUptimePercentage:
          type: number
          description: Guaranteed uptime percentage per SLA
          example: 99.9
        maxResponseTimeMs:
          type: integer
          description: Maximum acceptable response time in milliseconds
          format: int32
          example: 500
        rateLimitPerSecond:
          type: integer
          description: 'Rate limit: requests per second'
          format: int32
          example: 100
        rateLimitPerMinute:
          type: integer
          description: 'Rate limit: requests per minute'
          format: int32
          example: 6000
        rateLimitPerHour:
          type: integer
          description: 'Rate limit: requests per hour'
          format: int32
          example: 360000
        certificationLevel:
          type: string
          description: 'Certification level: PCI_DSS, ISO27001, SOC2, etc.'
          example: PCI_DSS_LEVEL_1
        complianceCertifications:
          type: string
          description: Comma-separated list of compliance certifications
          example: PCI-DSS,ISO27001,SOC2
        pricingModel:
          type: string
          description: 'Pricing model: PAY_PER_USE, SUBSCRIPTION, TIERED, CUSTOM'
          example: PAY_PER_USE
        contractStartDate:
          type: string
          description: Contract start date
          format: date
          example: '2024-01-01'
        contractEndDate:
          type: string
          description: Contract end date
          format: date
          example: '2025-12-31'
        autoRenewal:
          type: boolean
          description: Indicates if contract auto-renews
          example: true
        noticePeriodDays:
          type: integer
          description: Notice period in days for contract termination
          format: int32
          example: 90
        primaryContactName:
          type: string
          description: Primary contact person name
          example: John Doe
        primaryContactEmail:
          type: string
          description: Primary contact email address
          example: support@stripe.com
        primaryContactPhone:
          type: string
          description: Primary contact phone number
          example: +1-888-926-2289
        escalationContactName:
          type: string
          description: Escalation contact person name
          example: Jane Smith
        escalationContactEmail:
          type: string
          description: Escalation contact email address
          example: escalation@stripe.com
        escalationContactPhone:
          type: string
          description: Escalation contact phone number
          example: +1-888-926-2290
        supportEmail:
          type: string
          description: General support email (deprecated - use primaryContactEmail)
          example: support@stripe.com
        supportPhone:
          type: string
          description: General support phone (deprecated - use primaryContactPhone)
          example: +1-888-926-2289
        healthCheckUrl:
          type: string
          description: URL endpoint for health check monitoring
          example: https://status.stripe.com/api/v2/status.json
        healthCheckIntervalSeconds:
          type: integer
          description: Interval in seconds between health checks
          format: int32
          example: 60
        healthCheckTimeoutSeconds:
          type: integer
          description: Timeout in seconds for health check requests
          format: int32
          example: 10
        healthCheckStatus:
          type: string
          description: 'Current health status: HEALTHY, DEGRADED, DOWN, UNKNOWN'
          example: HEALTHY
        lastHealthCheckAt:
          type: string
          description: Timestamp of last successful health check
          format: date-time
          readOnly: true
        lastHealthCheckFailureAt:
          type: string
          description: Timestamp of last health check failure
          format: date-time
          readOnly: true
        consecutiveFailureCount:
          type: integer
          description: Consecutive health check failure count
          format: int32
          readOnly: true
          example: 0
        metadata:
          type: string
          description: Additional metadata in JSON format for extensibility
          example: '{"custom_field":"value"}'
        active:
          type: boolean
          description: Indicates if the provider is active and available for use
          example: true
        version:
          type: integer
          description: Version number for optimistic locking
          format: int64
          readOnly: true
        createdAt:
          type: string
          description: Timestamp when provider was created
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Timestamp when provider was last updated
          format: date-time
          readOnly: true
      description: External service provider integrated with Firefly core banking system. Includes payment gateways, KYC providers, card issuers, fraud detection services, etc.
    ProviderValueMappingDTO:
      required:
        - fireflyValue
        - mappingType
        - providerId
        - providerValue
      type: object
      properties:
        id:
          type: string
          description: Provider value mapping ID
          format: uuid
          readOnly: true
        providerId:
          type: string
          description: ID of the provider
          format: uuid
        tenantId:
          type: string
          description: ID of the tenant (null for provider-level mappings)
          format: uuid
        mappingType:
          maxLength: 100
          minLength: 1
          type: string
          description: Type of mapping
          example: TRANSACTION_STATUS
        fireflyValue:
          maxLength: 255
          minLength: 1
          type: string
          description: Internal Firefly value
          example: APPROVED
        providerValue:
          maxLength: 255
          minLength: 1
          type: string
          description: Provider-specific value
          example: SUCCESS
        direction:
          type: string
          description: Direction of mapping
          example: BIDIRECTIONAL
        description:
          type: string
          description: Description of the mapping
          example: Maps Firefly APPROVED status to provider SUCCESS status
        priority:
          type: integer
          description: Priority for conflict resolution
          format: int32
          example: 1
        metadata:
          type: string
          description: Additional metadata in JSON format
          example: '{"notes":"Default mapping"}'
        active:
          type: boolean
          description: Whether the mapping is active
          default: true
        version:
          type: integer
          description: Version for optimistic locking
          format: int64
          readOnly: true
        createdAt:
          type: string
          description: Creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Last update timestamp
          format: date-time
          readOnly: true
      description: Provider value mapping between Firefly and provider values
    ProviderTypeDTO:
      required:
        - code
        - name
      type: object
      properties:
        id:
          type: string
          description: Provider type ID
          format: uuid
          readOnly: true
        code:
          maxLength: 50
          minLength: 2
          type: string
          description: Unique code for the provider type
          example: BAAS
        name:
          maxLength: 100
          minLength: 2
          type: string
          description: Name of the provider type
          example: Banking as a Service
        description:
          type: string
          description: Description of the provider type
          example: Providers that offer banking services through APIs
        active:
          type: boolean
          description: Whether the provider type is active
          default: true
        version:
          type: integer
          description: Version for optimistic locking
          format: int64
          readOnly: true
        createdAt:
          type: string
          description: Creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Last update timestamp
          format: date-time
          readOnly: true
      description: Provider Type information
    ProviderStatusDTO:
      required:
        - code
        - name
      type: object
      properties:
        id:
          type: string
          description: Provider status ID
          format: uuid
          readOnly: true
        code:
          maxLength: 50
          minLength: 2
          type: string
          description: Unique code for the provider status
          example: ACTIVE
        name:
          maxLength: 100
          minLength: 2
          type: string
          description: Name of the provider status
          example: Active
        description:
          type: string
          description: Description of the provider status
          example: Provider is active and operational
        active:
          type: boolean
          description: Whether the provider status is active
          default: true
        version:
          type: integer
          description: Version for optimistic locking
          format: int64
          readOnly: true
        createdAt:
          type: string
          description: Creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Last update timestamp
          format: date-time
          readOnly: true
      description: Provider Status information
    ProviderParameterDTO:
      required:
        - parameterName
        - providerId
      type: object
      properties:
        id:
          type: string
          description: Provider parameter ID
          format: uuid
          readOnly: true
        providerId:
          type: string
          description: ID of the provider
          format: uuid
        tenantId:
          type: string
          description: ID of the tenant (null for provider-level parameters)
          format: uuid
        parameterName:
          maxLength: 100
          minLength: 1
          type: string
          description: Name of the parameter
          example: api_key
        parameterValue:
          type: string
          description: Value of the parameter
          example: sk_test_123456
        parameterType:
          type: string
          description: Type of the parameter
          example: STRING
        description:
          type: string
          description: Description of the parameter
          example: API key for authentication
        isSecret:
          type: boolean
          description: Whether the parameter is secret
          default: false
        isRequired:
          type: boolean
          description: Whether the parameter is required
          default: false
        isEditable:
          type: boolean
          description: Whether the parameter is editable
          default: true
        validationRegex:
          type: string
          description: Validation regex for the parameter value
          example: ^sk_[a-zA-Z0-9]+$
        defaultValue:
          type: string
          description: Default value for the parameter
        environment:
          type: string
          description: Environment for the parameter
          example: production
        category:
          type: string
          description: Category of the parameter
          example: authentication
        displayOrder:
          type: integer
          description: Display order for UI
          format: int32
          example: 1
        metadata:
          type: string
          description: Additional metadata in JSON format
          example: '{"ui_hint":"password"}'
        active:
          type: boolean
          description: Whether the parameter is active
          default: true
        version:
          type: integer
          description: Version for optimistic locking
          format: int64
          readOnly: true
        createdAt:
          type: string
          description: Creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Last update timestamp
          format: date-time
          readOnly: true
      description: Provider parameter/configuration information
    FeatureFlagDTO:
      required:
        - featureKey
        - featureName
      type: object
      properties:
        id:
          type: string
          description: Feature flag ID
          format: uuid
          readOnly: true
        tenantId:
          type: string
          description: Tenant ID (null for global feature flags)
          format: uuid
        featureKey:
          maxLength: 100
          minLength: 2
          type: string
          description: Unique feature key
          example: ENABLE_INSTANT_PAYMENTS
        featureName:
          maxLength: 200
          minLength: 2
          type: string
          description: Human-readable feature name
          example: Enable Instant Payments
        description:
          type: string
          description: Feature description
        enabled:
          type: boolean
          description: Whether the feature is enabled
          example: true
        environment:
          type: string
          description: Environment (dev, staging, prod, all)
          example: prod
        rolloutPercentage:
          maximum: 100
          minimum: 0
          type: integer
          description: Percentage of users to enable feature for (0-100)
          format: int32
          example: 50
        startDate:
          type: string
          description: Feature start date
          format: date-time
        endDate:
          type: string
          description: Feature end date
          format: date-time
        targetUserSegments:
          type: string
          description: Target user segments (JSON array)
          example: '["premium","enterprise"]'
        metadata:
          type: string
          description: Additional metadata (JSON)
        active:
          type: boolean
          description: Whether the feature flag is active
          example: true
        version:
          type: integer
          description: Version for optimistic locking
          format: int64
          readOnly: true
        createdAt:
          type: string
          description: Creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Last update timestamp
          format: date-time
          readOnly: true
      description: Feature flag for controlling feature availability
    EnvironmentConfigDTO:
      required:
        - configKey
        - configValue
        - environmentName
      type: object
      properties:
        id:
          type: string
          description: Environment config ID
          format: uuid
          readOnly: true
        tenantId:
          type: string
          description: Tenant ID (null for global configs)
          format: uuid
        environmentName:
          type: string
          description: Environment name (dev, staging, prod)
          example: prod
        configKey:
          maxLength: 100
          minLength: 2
          type: string
          description: Configuration key
          example: database.pool.size
        configValue:
          type: string
          description: Configuration value
          example: '50'
        configType:
          type: string
          description: Configuration type (STRING, INTEGER, BOOLEAN, JSON)
          example: INTEGER
        description:
          type: string
          description: Configuration description
        isSecret:
          type: boolean
          description: Whether the value is a secret
          example: false
        category:
          type: string
          description: Configuration category
          example: database
        metadata:
          type: string
          description: Additional metadata (JSON)
        active:
          type: boolean
          description: Whether the config is active
          example: true
        version:
          type: integer
          description: Version for optimistic locking
          format: int64
          readOnly: true
        createdAt:
          type: string
          description: Creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Last update timestamp
          format: date-time
          readOnly: true
      description: Environment-specific configuration
    ChannelConfigDTO:
      required:
        - channelCode
        - channelName
        - tenantId
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the channel configuration
          format: uuid
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426614174000
        tenantId:
          type: string
          description: Reference to the tenant that owns this channel configuration
          format: uuid
        channelCode:
          maxLength: 50
          minLength: 0
          type: string
          description: 'Channel code for programmatic reference: WEB_BANKING, MOBILE_BANKING, ATM, BRANCH, CALL_CENTER, API, OPEN_BANKING'
          example: WEB_BANKING
        channelName:
          maxLength: 100
          minLength: 0
          type: string
          description: Display name of the channel
          example: Web Banking
        description:
          maxLength: 500
          minLength: 0
          type: string
          description: Detailed description of the channel and its purpose
          example: Primary web banking channel for desktop users
        channelType:
          type: string
          description: 'Channel type: DIGITAL, PHYSICAL, API, PARTNER'
          example: DIGITAL
        requiresAuthentication:
          type: boolean
          description: Indicates if authentication is required for this channel
          example: true
        supportsBiometricAuth:
          type: boolean
          description: Indicates if biometric authentication is supported
          example: true
        maxConcurrentSessions:
          minimum: 1
          type: integer
          description: Maximum number of concurrent sessions allowed per user
          format: int32
          example: 3
        sessionTimeoutMinutes:
          minimum: 1
          type: integer
          description: Session timeout in minutes
          format: int32
          example: 30
        idleTimeoutMinutes:
          minimum: 1
          type: integer
          description: Idle timeout in minutes before automatic logout
          format: int32
          example: 15
        rateLimitPerMinute:
          minimum: 1
          type: integer
          description: Maximum requests allowed per minute
          format: int32
          example: 60
        rateLimitPerHour:
          minimum: 1
          type: integer
          description: Maximum requests allowed per hour
          format: int32
          example: 3600
        maxTransactionAmount:
          minimum: 0
          exclusiveMinimum: true
          type: number
          description: Maximum transaction amount allowed for this channel
          example: 50000
        dailyTransactionLimit:
          minimum: 0
          exclusiveMinimum: true
          type: number
          description: Daily transaction limit for this channel
          example: 100000
        monthlyTransactionLimit:
          minimum: 0
          exclusiveMinimum: true
          type: number
          description: Monthly transaction limit for this channel
          example: 1000000
        minAppVersion:
          maxLength: 20
          minLength: 0
          type: string
          description: Minimum app version required (for mobile channels)
          example: 3.0.0
        supportedPlatforms:
          maxLength: 255
          minLength: 0
          type: string
          description: Comma-separated list of supported platforms
          example: iOS,Android,Web
        maintenanceWindowStart:
          $ref: '#/components/schemas/LocalTime'
        maintenanceWindowEnd:
          $ref: '#/components/schemas/LocalTime'
        availabilitySchedule:
          type: string
          description: Availability schedule in cron format or JSON
          example: 0 0 * * * *
        geoRestrictionsEnabled:
          type: boolean
          description: Indicates if geographic restrictions are enabled
          example: false
        allowedCountries:
          maxLength: 500
          minLength: 0
          type: string
          description: Comma-separated list of allowed country codes (ISO 3166-1 alpha-2)
          example: US,CA,GB
        blockedCountries:
          maxLength: 500
          minLength: 0
          type: string
          description: Comma-separated list of blocked country codes (ISO 3166-1 alpha-2)
          example: KP,IR
        ipWhitelist:
          type: string
          description: Comma-separated list of whitelisted IP addresses or CIDR ranges
          example: 192.168.1.0/24,10.0.0.1
        featuresEnabled:
          type: string
          description: Comma-separated list of enabled features for this channel
          example: TRANSFERS,BILL_PAY,MOBILE_DEPOSIT
        featuresDisabled:
          type: string
          description: Comma-separated list of disabled features for this channel
          example: WIRE_TRANSFER,INTERNATIONAL_TRANSFER
        customBrandingEnabled:
          type: boolean
          description: Indicates if custom branding is enabled for this channel
          example: true
        analyticsEnabled:
          type: boolean
          description: Indicates if analytics tracking is enabled
          example: true
        loggingLevel:
          type: string
          description: 'Logging level: DEBUG, INFO, WARN, ERROR'
          example: INFO
        enabled:
          type: boolean
          description: Indicates if this channel is enabled
          example: true
        priority:
          minimum: 1
          type: integer
          description: Channel priority for failover (1 = highest priority)
          format: int32
          example: 1
        failoverChannelId:
          type: string
          description: Reference to backup channel if this one fails (Foreign Key to channel_configs)
          format: uuid
        metadata:
          type: string
          description: Additional metadata in JSON format for extensibility
          example: '{"custom_field":"value"}'
        active:
          type: boolean
          description: Indicates if this channel configuration is active
          example: true
        version:
          type: integer
          description: Version number for optimistic locking
          format: int64
          readOnly: true
        createdAt:
          type: string
          description: Timestamp when channel configuration was created
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Timestamp when channel configuration was last updated
          format: date-time
          readOnly: true
      description: Channel configuration for a tenant. Manages configuration for different banking channels (Web, Mobile, ATM, Branch, API, etc.) with security settings, rate limits, transaction limits, availability schedules, and feature management.
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
      description: Maintenance window end time (HH:mm:ss)
      example: '04:00:00'
    ChannelConfigParameterDTO:
      required:
        - channelCode
        - channelConfigId
        - parameterKey
        - parameterType
        - parameterValue
      type: object
      properties:
        id:
          type: string
          description: Parameter ID
          format: uuid
          readOnly: true
        channelConfigId:
          type: string
          description: Channel config ID
          format: uuid
        channelCode:
          maxLength: 50
          minLength: 0
          type: string
          description: Channel code (WEB_BANKING, MOBILE_BANKING, ATM, BRANCH, CALL_CENTER, API, OPEN_BANKING)
          example: WEB_BANKING
        parameterKey:
          maxLength: 100
          minLength: 0
          type: string
          description: Parameter key
          example: max_transaction_amount
        parameterValue:
          maxLength: 1000
          minLength: 0
          type: string
          description: Parameter value (stored as string)
          example: '50000.0'
        parameterType:
          maxLength: 50
          minLength: 0
          type: string
          description: Parameter type (STRING, INTEGER, DECIMAL, BOOLEAN, JSON)
          example: DECIMAL
        description:
          maxLength: 500
          minLength: 0
          type: string
          description: Parameter description
          example: Maximum transaction amount allowed for this channel
        isSensitive:
          type: boolean
          description: Whether the parameter value is sensitive (should be encrypted/masked)
          example: false
        isRequired:
          type: boolean
          description: Whether the parameter is required
          example: true
        validationRegex:
          maxLength: 500
          minLength: 0
          type: string
          description: Optional regex for value validation
          example: ^[0-9]+(\.[0-9]{1,2})?$
        defaultValue:
          maxLength: 1000
          minLength: 0
          type: string
          description: Default value if not set
          example: '10000.0'
        category:
          maxLength: 50
          minLength: 0
          type: string
          description: Parameter category (SECURITY, LIMITS, FEATURES, AVAILABILITY, MONITORING)
          example: LIMITS
        active:
          type: boolean
          description: Whether the parameter is active
          example: true
        version:
          type: integer
          description: Version for optimistic locking
          format: int64
          readOnly: true
        createdAt:
          type: string
          description: Creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Last update timestamp
          format: date-time
          readOnly: true
      description: Dynamic configuration parameter for a channel
    PaginationResponseWebhookConfigDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/WebhookConfigDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterOptions:
      type: object
      properties:
        caseInsensitiveStrings:
          type: boolean
        includeInheritedFields:
          type: boolean
      description: Filter options for customizing filter behavior
    FilterRequestProviderTenantDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/ProviderTenantDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination
    PaginationRequest:
      type: object
      properties:
        pageNumber:
          type: integer
          description: The zero-based page number to retrieve.
          format: int32
          example: 0
          default: 0
        pageSize:
          type: integer
          description: The number of items per page.
          format: int32
          example: 10
          default: 10
        sortBy:
          type: string
          description: The field to sort the results by.
          example: name
        sortDirection:
          type: string
          description: The direction of sorting, either ASC or DESC.
          example: DESC
          default: DESC
      description: Represents a pagination request for retrieving paginated results, including page number, size, sort field, and direction.
    RangeFilter:
      type: object
      properties:
        ranges:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RangeObject'
          description: Map of field names to their range criteria
      description: Represents range filters for numeric fields
    RangeObject:
      type: object
      properties:
        from:
          type: object
          description: Start value of the range
        to:
          type: object
          description: End value of the range
      description: Represents a range with from and to values
    PaginationResponseProviderTenantDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/ProviderTenantDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseTenantDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/TenantDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseTenantStatusDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/TenantStatusDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseTenantSettingsDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/TenantSettingsDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseTenantBrandingDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/TenantBrandingDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseProviderDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/ProviderDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseProviderValueMappingDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/ProviderValueMappingDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseProviderTypeDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/ProviderTypeDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseProviderStatusDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/ProviderStatusDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseProviderParameterDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/ProviderParameterDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseFeatureFlagDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/FeatureFlagDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseEnvironmentConfigDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/EnvironmentConfigDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    ConfigurationAuditDTO:
      required:
        - action
        - entityId
        - entityType
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the audit record
          format: uuid
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426614174000
        tenantId:
          type: string
          description: Reference to tenant that owns the changed entity
          format: uuid
        entityType:
          type: string
          description: Type of entity that was changed
          example: Tenant
        entityId:
          type: string
          description: Unique identifier of the changed entity
          format: uuid
        action:
          type: string
          description: 'Type of action performed: CREATE, UPDATE, DELETE, ACTIVATE, DEACTIVATE'
          example: UPDATE
        fieldName:
          type: string
          description: Specific field name that was changed (null for CREATE/DELETE)
          example: apiRateLimitPerHour
        oldValue:
          type: string
          description: Value before the change (null for CREATE)
          example: '1000'
        newValue:
          type: string
          description: Value after the change (null for DELETE)
          example: '5000'
        changedByUserId:
          type: string
          description: Reference to user who made the change
          format: uuid
        changedByUsername:
          type: string
          description: Username or email of user who made the change
          example: admin@firefly.com
        changeReason:
          type: string
          description: Business justification or reason for the change
          example: Increased rate limit for premium tier customer
        ipAddress:
          type: string
          description: IP address from which the change was made
          example: 192.168.1.100
        userAgent:
          type: string
          description: User agent string of the client
          example: Mozilla/5.0 (Windows NT 10.0; Win64; x64)...
        sessionId:
          type: string
          description: Session identifier for grouping related changes
          example: sess_abc123
        requestId:
          type: string
          description: Request identifier for distributed tracing
          example: req_xyz789
        correlationId:
          type: string
          description: Correlation identifier for tracking across services
          example: corr_def456
        sourceSystem:
          type: string
          description: 'Source system that initiated the change: WEB_UI, API, BATCH_JOB, MIGRATION, SYSTEM'
          example: WEB_UI
        changeCategory:
          type: string
          description: 'Category of change: CONFIGURATION, SECURITY, COMPLIANCE, OPERATIONAL, EMERGENCY'
          example: CONFIGURATION
        changeSeverity:
          type: string
          description: 'Severity level: LOW, MEDIUM, HIGH, CRITICAL'
          example: MEDIUM
        impactScope:
          type: string
          description: 'Impact scope: TENANT, PROVIDER, SYSTEM, GLOBAL'
          example: TENANT
        requiresApproval:
          type: boolean
          description: Indicates if this change required approval
          example: true
        approvedByUserId:
          type: string
          description: Reference to user who approved the change
          format: uuid
        approvedAt:
          type: string
          description: Timestamp when change was approved
          format: date-time
          readOnly: true
        approvalNotes:
          type: string
          description: Approval notes or comments
          example: Approved for production deployment
        rollbackAvailable:
          type: boolean
          description: Indicates if rollback is available for this change
          example: true
        rolledBack:
          type: boolean
          description: Indicates if this change has been rolled back
          example: false
        rolledBackByUserId:
          type: string
          description: Reference to user who performed the rollback
          format: uuid
        rolledBackAt:
          type: string
          description: Timestamp when rollback was performed
          format: date-time
          readOnly: true
        rollbackReason:
          type: string
          description: Reason for rolling back the change
          example: Caused performance degradation
        metadata:
          type: string
          description: Additional metadata in JSON format for extensibility
          example: '{"ticket_id":"JIRA-1234"}'
        createdAt:
          type: string
          description: Timestamp when audit record was created
          format: date-time
          readOnly: true
      description: Audit trail record for configuration changes. Provides complete traceability of who changed what, when, why, and supports rollback capabilities.
    PaginationResponseConfigurationAuditDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/ConfigurationAuditDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponse:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            type: object
            description: The list of items for the current page.
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestChannelConfigDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/ChannelConfigDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter request with criteria and pagination
    PaginationResponseChannelConfigDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/ChannelConfigDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestChannelConfigParameterDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/ChannelConfigParameterDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination